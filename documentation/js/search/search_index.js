var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.743,1,3.087]],["body/guards/AccessGuard.html",[0,3.465,1,4.912,2,0.236,3,0.236,4,0.176,5,4.561,6,0.236,7,1.194,8,6.804,9,1.002,10,2.664,11,2.002,12,4.119,13,0.948,14,4.561,15,1.407,16,0.021,17,0.892,18,0.376,19,1.066,20,2.049,21,4.561,22,6.601,23,2.997,24,6.804,25,4.561,26,2.426,27,1.226,28,2.919,29,3.418,30,0.869,31,1.262,32,0.708,33,2.317,34,3.9,35,4.561,36,3.465,37,2.317,38,4.561,39,1.54,40,2.88,41,2.317,42,0.236,43,0.298,44,1.243,45,1.383,46,1.819,47,4.561,48,3.356,49,3.14,50,1.719,51,4.561,52,1.002,53,0.583,54,1.926,55,1.179,56,1.179,57,2.664,58,3.9,59,4.561,60,4.561,61,4.561,62,4.561,63,3.9,64,4.561,65,2.664,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.236,68,2.485]],["body/classes/AddressModel.html",[2,0.234,3,0.234,4,0.175,6,0.234,13,1.144,16,0.021,17,0.888,18,0.453,19,1.062,23,3.305,42,0.234,43,0.374,53,0.579,66,0.016,67,0.016,68,3.939,69,3.875,70,0.361,71,2.236,72,4.763,73,4.531,74,1.914,75,0.782,76,3.118,77,5.632,78,6.585,79,6.935,80,6.935,81,1.375,82,4.531,83,3.11,84,6.585,85,5.721,86,2.173,87,5.721,88,4.531,89,4.892,90,4.531,91,2.726,92,3.613,93,4.531,94,4.531,95,4.531,96,4.892]],["title/components/AdminComponent.html",[97,0.262,98,0.984]],["body/components/AdminComponent.html",[2,0.149,3,0.149,4,0.111,6,0.149,7,0.873,9,0.632,10,1.681,11,1.757,13,1.095,15,0.705,16,0.021,17,0.846,18,0.379,19,0.534,20,1.768,27,1.012,30,0.696,32,0.447,39,0.972,42,0.149,43,0.188,44,1.145,45,0.873,52,1.197,53,0.818,55,1.408,56,1.085,66,0.012,67,0.012,70,0.335,75,0.574,76,1.774,81,1.212,92,4.293,97,0.487,98,1.486,99,1.027,100,1.027,101,1.027,102,2.461,103,1.943,104,3.591,105,4.199,106,4.199,107,3.591,108,1.586,109,0.972,110,2.16,111,2.039,112,2.891,113,1.344,114,4.199,115,1.344,116,4.199,117,4.14,118,5.449,119,4.659,120,4.659,121,5.449,122,5.449,123,4.659,124,5.449,125,1.744,126,4.199,127,1.197,128,1.264,129,2.891,130,2.878,131,2.282,132,1.882,133,4.199,134,1.744,135,2.878,136,2.891,137,3.854,138,3.591,139,2.652,140,2.878,141,4.199,142,2.711,143,4.595,144,2.878,145,4.199,146,2.878,147,1.943,148,3.534,149,3.073,150,1.942,151,2.878,152,4.199,153,2.133,154,1.586,155,0.972,156,0.873,157,2.878,158,1.498,159,2.878,160,4.199,161,3.591,162,1.085,163,2.461,164,2.878,165,2.878,166,0.705,167,2.461,168,2.878,169,1.868,170,2.878,171,2.878,172,5.449,173,2.878,174,2.461,175,2.878,176,2.878,177,2.878,178,2.878,179,2.461,180,2.461,181,2.878,182,2.891,183,3.591,184,2.453,185,3.591,186,2.453,187,3.591,188,4.199,189,0.921,190,1.274,191,1.207,192,1.943,193,1.027,194,0.828,195,1.027,196,1.027,197,0.828,198,1.027,199,0.785,200,0.785,201,1.027,202,0.785,203,1.027,204,0.785,205,1.027,206,0.785,207,1.027,208,0.828,209,1.027,210,0.785,211,1.027,212,0.785,213,1.027,214,0.828,215,1.027,216,0.828,217,1.027,218,0.785,219,1.027,220,0.785,221,1.027,222,0.785,223,1.027,224,0.785,225,0.921,226,0.785,227,0.972,228,1.027]],["title/interfaces/ApiError.html",[229,0.751,230,2.485]],["body/interfaces/ApiError.html",[2,0.224,3,0.224,4,0.168,6,0.224,16,0.021,18,0.478,19,1.033,27,1.141,42,0.288,50,1.636,53,0.711,54,2.351,66,0.016,67,0.016,70,0.346,71,1.548,75,0.761,81,1.273,86,1.966,229,1.157,230,3.832,231,3.298,232,3.298,233,4.201,234,6.145,235,3.712,236,3.59,237,3.59,238,5.366,239,4.721,240,3.728,241,4.76,242,6.482,243,3.516,244,5.567,245,4.229,246,4.76,247,2.828,248,4.76,249,5.567,250,5.567,251,3.59,252,2.22,253,5.567,254,3.516,255,4.925,256,3.59,257,4.76,258,4.34,259,3.712,260,3.712,261,3.712,262,3.712,263,4.76]],["title/components/AppComponent.html",[97,0.262,197,1.038]],["body/components/AppComponent.html",[2,0.202,3,0.202,4,0.151,6,0.202,7,1.08,13,1.027,15,0.956,16,0.021,17,0.966,18,0.382,19,0.725,27,0.725,30,0.499,32,0.606,41,3.161,42,0.202,43,0.255,53,0.795,54,2.193,56,1.342,57,3.034,66,0.015,67,0.015,70,0.311,74,2.193,75,0.71,81,1.282,97,0.493,98,1.064,99,1.392,100,1.392,101,1.392,109,1.318,110,2.237,111,2.126,113,1.662,115,1.662,134,1.249,154,1.249,155,1.318,156,1.184,189,1.249,190,1.575,191,1.493,192,2.219,193,1.392,194,1.122,195,1.392,196,1.392,197,1.789,198,1.392,199,1.064,200,1.064,201,1.392,202,1.064,203,1.392,204,1.064,205,1.392,206,1.064,207,1.392,208,1.122,209,1.392,210,1.064,211,1.392,212,1.064,213,1.392,214,1.122,215,1.392,216,1.122,217,1.392,218,1.064,219,1.392,220,1.064,221,1.392,222,1.064,223,1.392,224,1.064,225,1.249,226,1.064,227,1.318,228,1.392,252,2.481,264,3.337,265,3.945,266,4.441,267,5.193,268,5.193,269,5.32,270,3.754,271,6.661,272,5.193,273,5.193,274,3.903,275,4.441,276,4.441,277,2.965,278,3.903,279,3.945,280,3.903,281,3.903,282,3.575,283,3.903]],["title/modules/AppModule.html",[284,1.962,285,2.485]],["body/modules/AppModule.html",[2,0.151,3,0.151,4,0.113,11,1.842,16,0.021,30,0.946,32,0.452,39,1.685,42,0.219,43,0.19,65,2.473,66,0.012,67,0.012,70,0.232,98,1.656,111,0.837,162,1.097,189,0.932,194,1.746,197,1.959,199,1.656,202,1.656,204,1.656,206,1.656,208,1.746,210,1.656,212,1.656,214,1.746,216,1.746,218,1.656,220,1.656,222,1.656,224,1.656,226,1.656,252,2.321,254,3.835,265,3.217,266,3.621,284,2.302,285,5.178,286,1.23,287,3.791,288,4.162,289,2.49,290,2.49,291,2.49,292,2.49,293,2.49,294,3.835,295,3.086,296,4.181,297,3.835,298,2.565,299,3.621,300,2.49,301,1.479,302,2.911,303,4.234,304,3.621,305,3.621,306,4.234,307,3.621,308,2.004,309,4.234,310,2.911,311,3.621,312,4.989,313,4.234,314,2.49,315,4.234,316,4.234,317,2.212,318,2.49,319,2.911,320,2.49,321,2.49,322,2.49,323,2.49,324,2.49,325,2.004,326,2.49,327,2.49,328,2.911,329,4.234,330,2.911,331,2.004,332,2.911,333,2.49,334,2.911,335,2.911,336,2.911,337,2.911,338,2.911,339,1.583,340,2.911,341,3.621,342,2.004,343,2.212,344,4.989,345,1.701,346,2.911,347,2.212,348,2.911,349,2.49,350,2.49,351,2.911,352,2.49,353,1.583,354,2.49,355,2.911,356,2.911,357,2.49,358,2.49,359,2.004,360,2.49,361,2.49,362,2.004,363,2.49,364,4.234,365,2.911,366,2.911,367,2.911,368,2.911,369,2.911,370,2.911,371,2.911,372,2.49,373,4.234,374,4.234]],["title/classes/AppPage.html",[43,0.236,375,2.743]],["body/classes/AppPage.html",[2,0.278,3,0.278,4,0.208,6,0.278,7,1.319,13,1.047,16,0.021,27,1.296,30,0.686,41,2.728,42,0.278,43,0.415,66,0.018,67,0.018,191,1.544,308,3.697,375,4.822,376,4.592,377,6.982,378,6.982,379,5.37,380,5.37,381,4.592,382,5.37,383,5.37,384,5.37]],["title/modules/AppRoutingModule.html",[284,1.962,294,2.28]],["body/modules/AppRoutingModule.html",[2,0.211,3,0.211,4,0.158,16,0.021,26,2.778,30,0.935,32,0.634,33,2.076,42,0.309,43,0.35,66,0.015,67,0.015,97,0.523,98,1.459,112,2.813,127,0.898,191,1.175,194,1.539,199,1.459,200,1.114,202,1.459,204,1.459,206,1.459,212,1.459,214,1.539,218,1.459,220,1.459,224,1.459,284,2.221,287,3.104,294,3.38,311,4.577,320,3.494,321,3.494,322,3.494,323,3.494,324,3.494,325,2.813,326,3.494,327,3.494,333,3.494,349,3.494,350,3.494,357,3.494,358,3.494,359,2.813,360,3.494,361,3.494,362,2.813,363,3.494,385,4.086,386,4.086,387,5.353,388,3.494,389,5.353,390,4.086,391,4.086,392,4.086,393,2.387,394,4.086,395,2.813,396,3.104,397,3.494,398,1.38,399,7.256,400,4.086,401,4.086,402,5.353,403,4.11,404,4.086,405,2.58,406,1.629,407,4.086,408,3.494,409,1.947,410,3.104,411,4.086,412,3.104,413,4.086]],["title/injectables/AuthService.html",[31,0.793,295,1.834]],["body/injectables/AuthService.html",[2,0.152,3,0.152,4,0.114,6,0.152,7,0.886,9,0.936,11,1.771,12,2.929,13,0.908,15,1.228,16,0.021,17,0.778,18,0.328,19,0.931,20,1.962,26,1.799,27,1.131,28,2.794,29,2.725,30,0.851,31,1.102,32,0.456,33,1.492,36,2.231,37,1.492,39,0.992,40,1.854,41,1.492,42,0.152,43,0.192,46,2.193,49,3.786,52,1.338,53,0.904,54,2.573,55,1.624,66,0.012,67,0.012,70,0.439,76,1.799,81,1.267,97,0.213,103,1.519,127,1.208,128,0.989,134,1.363,154,1.76,161,3.643,166,1.607,182,3.452,233,2.489,236,3.671,237,2.489,251,3.558,270,3.774,275,2.511,286,2.323,295,2.164,301,2.164,341,2.511,342,4.02,345,2.489,398,1.439,405,2.69,406,1.999,412,4.178,414,2.511,415,3.893,416,2.929,417,2.231,418,4.143,419,2.936,420,2.933,421,3.643,422,2.164,423,4.26,424,1.699,425,2.933,426,3.411,427,4.26,428,4.26,429,5.5,430,2.936,431,2.933,432,4.26,433,4.143,434,3.236,435,2.69,436,2.511,437,3.236,438,2.316,439,4.703,440,3.643,441,4.26,442,4.26,443,2.936,444,4.703,445,3.236,446,3.236,447,2.936,448,2.231,449,2.511,450,1.854,451,2.231,452,2.936,453,2.936,454,1.24,455,1.854,456,1.854,457,1.854,458,1.316,459,4.26,460,2.936,461,2.936,462,2.936,463,2.936,464,2.936,465,2.936,466,2.936,467,2.936,468,2.936,469,2.936,470,2.231,471,2.936,472,3.643,473,2.936,474,2.936,475,2.936,476,2.936,477,2.511,478,2.936,479,2.511,480,2.936,481,2.936,482,2.936,483,2.511,484,2.936,485,2.511,486,2.936,487,2.511,488,2.936,489,2.511,490,2.936,491,2.511,492,2.021,493,2.936,494,2.231,495,2.936,496,2.021,497,2.511,498,4.26,499,2.936,500,2.936,501,2.936,502,2.936,503,5.013,504,4.26,505,2.936,506,2.511]],["title/classes/Car.html",[43,0.236,200,0.984]],["body/classes/Car.html",[2,0.235,3,0.235,4,0.176,6,0.235,13,1.122,16,0.021,18,0.444,30,0.732,42,0.235,43,0.375,48,3.349,53,0.869,66,0.016,67,0.016,70,0.362,71,2.351,75,0.783,81,1.289,86,2.221,91,3.308,200,1.976,406,2.286,422,3.35,507,3.887,508,4.902,509,2.286,510,4.902,511,4.383,512,6.941,513,4.383,514,4.546,515,3.349,516,4.546,517,5.638,518,5.638,519,4.546,520,2.955,521,4.546,522,3.62,523,4.546,524,3.887,525,3.887]],["title/components/CarRegistrationComponent.html",[97,0.262,199,0.984]],["body/components/CarRegistrationComponent.html",[2,0.121,3,0.121,4,0.091,6,0.121,7,0.748,9,0.514,10,1.368,11,1.609,13,1.099,15,0.881,16,0.021,17,0.823,18,0.412,19,0.668,20,1.562,27,1.039,28,2.963,30,0.628,32,0.363,39,0.791,42,0.121,43,0.153,44,0.981,45,0.71,52,1.08,53,0.873,54,1.519,55,0.93,56,0.93,66,0.01,67,0.01,70,0.287,74,1.519,75,0.491,81,1.039,86,1.792,91,1.714,97,0.447,98,0.638,99,0.835,100,0.835,101,0.835,103,1.283,108,1.402,109,0.791,110,2.098,111,1.977,113,1.151,115,1.151,125,1.573,127,1.08,128,0.835,134,1.697,142,1.612,143,4.254,154,0.749,155,0.791,156,1.329,158,1.283,162,0.882,166,0.573,189,0.749,190,1.091,191,1.034,192,1.753,193,0.835,194,1.26,195,0.835,196,0.835,197,0.673,198,0.835,199,1.34,200,2.022,201,0.835,202,0.638,203,0.835,204,0.638,205,0.835,206,0.638,207,0.835,208,0.673,209,0.835,210,0.638,211,0.835,212,0.638,213,0.835,214,0.673,215,0.835,216,0.673,217,0.835,218,0.638,219,0.835,220,0.638,221,0.835,222,0.638,223,0.835,224,0.638,225,0.749,226,0.638,227,0.791,228,0.835,243,3.536,286,1.519,359,4.627,393,2.101,398,1.479,416,2.101,422,2.845,424,1.747,436,2.002,458,1.049,492,1.612,496,1.612,509,0.934,510,4.203,511,3.536,513,3.104,517,3.076,526,5.748,527,2.002,528,2.733,529,2.272,530,3.271,531,3.597,532,3.597,533,4.915,534,4.915,535,4.915,536,4.915,537,4.915,538,4.915,539,4.915,540,3.597,541,4.915,542,4.915,543,4.915,544,3.597,545,3.384,546,3.597,547,2.341,548,3.597,549,2.733,550,3.597,551,2.341,552,3.076,553,1.714,554,2.733,555,2.341,556,3.597,557,4.203,558,2.341,559,3.734,560,2.341,561,3.076,562,2.272,563,2.365,564,2.341,565,3.076,566,3.597,567,2.341,568,2.341,569,2.101,570,2.341,571,3.597,572,3.597,573,3.076,574,2.341,575,2.341,576,3.597,577,3.597,578,2.341,579,2.341,580,0.989,581,1.779,582,3.597,583,4.38,584,2.341,585,2.341,586,3.597,587,3.076,588,3.597,589,2.341,590,2.341,591,2.341,592,2.341,593,3.597,594,2.341,595,2.341,596,2.341,597,3.597,598,4.38,599,2.341,600,2.341,601,1.612,602,2.341,603,2.341,604,3.597,605,2.341,606,3.597,607,2.341,608,2.341,609,3.597,610,2.341,611,2.341,612,2.341,613,2.341,614,2.341,615,2.341,616,2.733,617,2.101,618,3.597,619,3.597,620,3.597,621,3.597]],["title/interfaces/ContactInfo.html",[229,0.751,622,2.485]],["body/interfaces/ContactInfo.html",[2,0.378,3,0.257,4,0.192,6,0.257,16,0.021,18,0.477,42,0.257,52,1.331,53,0.635,66,0.017,67,0.017,70,0.396,75,0.828,81,1.317,86,2.091,91,3.381,150,1.507,229,1.259,238,4.601,515,3.538,545,4.17,622,4.17,623,3.774,624,3.774,625,3.137,626,4.405,627,6.057,628,6.057,629,3.077,630,6.057,631,6.057,632,5.179]],["title/interceptors/ErrorInterceptor.html",[254,2.28,633,2.485]],["body/interceptors/ErrorInterceptor.html",[2,0.191,3,0.191,4,0.143,6,0.191,7,1.04,9,0.811,12,4.038,13,0.825,15,1.225,16,0.021,17,0.776,18,0.327,19,0.929,26,2.113,27,1.129,29,3.084,30,0.856,31,1.099,32,0.573,33,1.875,34,3.156,36,2.804,37,1.875,42,0.191,43,0.241,44,1.006,45,1.119,46,1.472,52,1.099,54,2.952,63,3.156,66,0.014,67,0.014,70,0.452,97,0.362,103,1.784,127,1.099,128,1.161,153,1.875,166,1.49,230,3.444,233,4.082,236,4.082,237,4.119,251,2.156,254,3.159,255,2.804,282,3.444,295,3.465,301,3.512,343,4.621,345,2.156,398,1.246,421,3.156,424,1.994,454,2.113,625,3.159,633,2.541,634,3.691,635,5.002,636,5.201,637,5.674,638,4.852,639,3.156,640,3.691,641,4.621,642,3.8,643,5.002,644,5.201,645,5.002,646,3.156,647,5.201,648,3.553,649,3.691,650,3.8,651,4.277,652,4.277,653,4.277,654,4.277,655,3.156,656,4.277,657,5.002,658,3.691,659,3.691,660,3.691,661,2.804,662,3.691,663,3.691,664,5.674,665,3.691,666,3.691,667,3.691,668,3.691,669,3.691,670,3.691,671,3.691,672,3.691,673,3.156,674,3.156,675,3.691,676,3.691,677,3.691,678,3.691]],["title/components/FavoritesComponent.html",[97,0.262,202,0.984]],["body/components/FavoritesComponent.html",[2,0.199,3,0.199,4,0.149,6,0.199,7,1.069,9,1.273,13,0.956,16,0.021,17,0.899,27,0.714,30,0.491,32,0.597,42,0.199,43,0.251,44,1.401,53,0.657,55,1.598,56,1.329,66,0.014,67,0.014,70,0.306,75,0.702,97,0.505,98,1.048,99,1.371,100,1.371,101,1.371,108,1.853,109,1.298,110,2.233,111,2.111,113,1.645,115,1.645,125,1.979,127,1.359,128,1.193,134,1.23,154,2.23,155,1.298,156,1.166,189,1.23,190,1.559,191,1.478,192,2.205,193,1.371,194,1.105,195,1.371,196,1.371,197,1.105,198,1.371,199,1.048,200,1.048,201,1.371,202,1.686,203,1.371,204,1.048,205,1.371,206,1.048,207,1.371,208,1.105,209,1.371,210,1.048,211,1.371,212,1.048,213,1.371,214,1.105,215,1.371,216,1.105,217,1.371,218,1.048,219,1.371,220,1.048,221,1.371,222,1.048,223,1.371,224,1.048,225,1.23,226,1.048,227,1.298,228,1.371,252,2.05,286,2.171,410,4.698,438,2.794,456,3.246,679,3.287,680,5.14,681,3.142,682,5.14,683,4.738,684,3.003,685,5.14,686,5.14,687,3.987,688,5.14,689,4.396,690,3.246,691,3.905,692,3.843,693,3.246,694,3.003,695,4.738,696,5.14,697,5.14,698,2.304,699,3.287]],["title/classes/Filter.html",[43,0.236,700,2.109]],["body/classes/Filter.html",[2,0.257,3,0.257,4,0.192,6,0.257,13,1.078,16,0.021,18,0.427,28,3.71,42,0.257,43,0.396,52,1.091,53,0.869,66,0.017,67,0.018,70,0.396,72,3.774,75,0.828,127,1.091,128,1.153,131,3.292,148,3.538,149,3.077,158,1.772,252,1.981,456,3.825,629,3.077,700,4.266,701,4.248,702,6.803,703,6.803,704,6.803,705,4.967,706,4.967,707,4.601,708,3.292,709,4.967,710,3.825]],["title/injectables/GeocodeService.html",[31,0.793,711,2.743]],["body/injectables/GeocodeService.html",[2,0.185,3,0.185,4,0.138,6,0.185,7,1.249,9,1.227,13,0.991,15,1.2,16,0.021,17,0.761,18,0.365,19,0.91,27,1.235,29,3.777,30,0.626,31,1.227,32,0.556,37,1.82,40,2.262,41,1.82,42,0.185,43,0.234,49,4.135,52,1.488,55,1.552,66,0.017,67,0.014,70,0.445,75,0.67,76,2.86,81,1.037,127,1.32,128,1.394,132,3.191,142,1.605,156,1.486,166,1.2,240,3.531,251,2.863,252,1.954,256,2.863,406,2.7,424,2.59,431,2.466,454,2.07,458,1.605,553,2.335,601,2.466,674,3.063,711,3.723,712,3.063,713,4.901,714,6.771,715,7.119,716,4.901,717,4.901,718,4.901,719,3.581,720,6.007,721,4.901,722,3.265,723,4.901,724,6.007,725,3.581,726,3.723,727,3.723,728,5.586,729,6.007,730,4.191,731,3.581,732,4.901,733,4.901,734,4.901,735,4.901,736,4.901,737,4.901,738,4.901,739,4.901,740,3.581,741,4.901,742,3.581,743,3.063,744,3.581]],["title/components/HowToComponent.html",[97,0.262,204,0.984]],["body/components/HowToComponent.html",[2,0.302,3,0.101,4,0.076,9,0.431,16,0.02,17,0.847,18,0.205,19,0.965,30,0.251,32,0.304,42,0.101,43,0.128,44,0.853,50,1.18,52,0.98,54,1.322,55,0.809,56,0.809,57,3.309,66,0.009,67,0.016,70,0.156,76,2.393,83,2.825,86,1.427,92,1.977,97,0.353,98,0.535,99,0.699,100,0.699,101,0.699,103,1.116,108,1.25,109,0.662,110,2.036,111,1.916,113,1.002,115,1.002,125,0.627,131,2.425,132,1.403,137,1.702,142,2.684,147,1.116,148,2.606,149,2.266,153,2.266,154,2.115,158,1.853,186,1.829,189,0.627,190,0.949,191,0.9,192,1.591,193,0.699,194,0.564,195,0.699,196,0.699,197,0.564,198,0.699,199,0.535,200,1.723,201,0.699,202,0.535,203,0.699,204,1.216,205,0.699,206,0.535,207,0.699,208,0.564,209,0.699,210,0.535,211,0.699,212,0.535,213,0.699,214,0.564,215,0.699,216,0.564,217,0.699,218,0.535,219,0.699,220,0.535,221,0.699,222,0.535,223,0.699,224,0.535,225,2.023,226,0.535,227,0.662,228,0.699,238,3.389,239,2.155,243,3.577,270,3.079,279,2.378,286,1.322,301,2.266,325,1.35,393,2.606,396,2.378,405,4.208,406,2.387,420,4.285,422,1.59,424,2.695,433,1.977,435,3.931,446,3.948,455,3.282,457,1.977,509,2.754,511,2.817,513,2.817,518,4.444,569,3.893,581,4.729,616,3.389,617,1.829,626,3.577,648,3.742,681,3.042,689,5.323,690,1.977,694,3.309,708,2.425,710,1.977,722,1.702,745,1.677,746,1.677,747,2.677,748,3.389,749,3.13,750,3.13,751,2.155,752,3.13,753,3.814,754,6.039,755,3.814,756,2.677,757,2.677,758,4.461,759,4.549,760,3.13,761,4.461,762,6.839,763,3.13,764,2.378,765,3.282,766,4.461,767,3.13,768,3.13,769,4.729,770,6.839,771,5.12,772,4.444,773,3.036,774,3.13,775,3.13,776,3.13,777,3.13,778,4.461,779,5.12,780,4.866,781,3.13,782,5.664,783,3.13,784,2.677,785,2.677,786,2.677,787,3.13,788,3.13,789,1.977,790,2.677,791,5.323,792,3.13,793,2.677,794,4.461,795,2.677,796,3.13,797,3.13,798,3.13,799,4.461,800,3.13,801,3.13,802,3.13,803,4.461,804,2.677,805,1.829,806,2.155,807,4.461,808,3.13,809,3.389,810,1.977,811,3.814,812,3.13,813,3.13,814,2.677,815,3.814,816,1.961,817,2.677,818,3.13,819,5.197,820,3.13,821,2.378,822,1.961,823,3.13,824,3.13,825,4.461,826,3.13,827,4.461,828,2.155,829,3.13,830,1.961,831,4.461,832,3.13,833,3.9,834,3.13,835,4.461,836,2.817,837,3.13,838,3.13,839,3.13,840,2.378,841,3.13,842,3.13,843,3.13,844,3.13,845,3.13,846,1.677,847,1.961,848,1.961,849,3.13,850,1.961,851,1.961]],["title/interceptors/JwtInterceptor.html",[296,2.485,633,2.485]],["body/interceptors/JwtInterceptor.html",[2,0.217,3,0.217,4,0.162,6,0.217,7,1.132,9,0.922,13,0.899,15,1.334,16,0.021,17,0.846,18,0.356,19,1.011,27,1.011,29,3.287,30,0.818,31,1.197,32,0.651,37,2.132,42,0.217,43,0.274,44,1.144,45,1.273,50,2.053,52,1.197,66,0.015,67,0.015,70,0.482,103,1.943,127,1.197,128,1.264,166,1.481,236,3.97,237,4.233,241,4.658,296,3.75,343,5.039,345,2.452,398,1.417,415,3.97,418,4.37,426,4.207,458,1.881,549,4.138,561,4.658,617,3.182,625,3.44,633,4.163,636,4.658,638,5.171,646,3.589,647,5.672,648,3.739,654,4.658,655,3.589,656,4.658,852,4.197,853,5.447,854,4.197,855,4.197,856,4.197,857,5.447,858,4.658,859,4.658,860,4.197,861,4.197,862,4.197,863,4.197,864,4.197,865,4.197,866,4.197]],["title/components/LandingComponent.html",[97,0.262,206,0.984]],["body/components/LandingComponent.html",[2,0.145,3,0.145,4,0.108,6,0.145,7,0.856,9,0.616,10,1.637,11,1.739,12,1.637,13,0.946,15,0.687,16,0.021,17,0.835,18,0.319,19,0.52,20,1.741,27,0.765,28,2.48,30,0.687,32,0.435,33,1.424,39,0.947,42,0.145,43,0.183,44,1.123,45,0.85,53,0.864,54,1.739,55,1.391,56,1.064,58,3.522,65,1.637,66,0.012,67,0.012,70,0.328,75,0.563,97,0.484,98,0.764,99,1,100,1,101,1,103,1.469,108,1.562,109,0.947,110,2.153,111,2.078,113,1.318,115,1.318,125,1.722,128,1.391,129,2.835,134,1.318,136,2.835,139,2.601,147,1.469,150,1.249,154,0.897,162,1.057,166,0.687,169,2.028,183,3.522,184,2.406,185,3.522,189,0.897,190,1.249,191,1.184,192,1.919,193,1,194,0.806,195,1,196,1,197,0.806,198,1,199,0.764,200,0.764,201,1,202,0.764,203,1,204,0.764,205,1,206,1.467,207,1,208,0.806,209,1,210,0.764,211,1,212,0.764,213,1,214,0.806,215,1,216,0.806,217,1,218,0.764,219,1,220,0.764,221,1,222,0.764,223,1,224,0.764,225,0.897,226,0.764,227,0.947,228,1,393,2.406,397,5.434,403,3.704,424,2.145,426,2.406,438,2.239,457,2.601,509,2.786,528,3.129,529,2.601,562,2.601,563,1.184,565,3.522,580,1.184,642,3.129,648,2.406,690,3.398,693,2.601,694,2.406,698,1.256,708,2.925,753,5.434,754,4.601,773,3.143,791,3.522,793,3.522,806,2.835,809,4.827,810,3.398,833,2.835,867,2.397,868,4.118,869,4.118,870,4.118,871,4.118,872,4.118,873,2.411,874,4.126,875,4.601,876,4.118,877,2.803,878,2.803,879,2.803,880,4.118,881,4.118,882,3.522,883,2.092,884,2.13,885,2.397,886,2.13,887,3.522,888,6.593,889,5.124,890,5.38,891,3.35,892,3.522,893,5.38,894,5.38,895,4.118,896,2.803,897,4.118,898,4.601,899,3.522,900,3.522,901,4.118,902,4.118,903,3.522,904,4.118,905,4.118,906,2.803,907,5.38,908,4.118,909,4.118,910,2.803,911,2.803]],["title/components/LikesComponent.html",[97,0.262,208,1.038]],["body/components/LikesComponent.html",[2,0.162,3,0.162,4,0.121,6,0.162,7,0.928,9,0.689,11,1.719,13,0.935,15,0.768,16,0.021,17,0.88,18,0.34,19,0.582,20,2.021,27,0.582,30,0.819,32,0.487,39,1.508,42,0.162,43,0.205,44,1.217,45,0.951,46,1.25,50,2.136,52,1.245,53,0.89,56,1.154,66,0.012,67,0.016,70,0.356,75,0.61,97,0.496,98,0.854,99,1.118,100,1.118,101,1.118,108,1.664,109,1.059,110,2.184,111,2.062,113,1.429,115,1.429,125,1.814,127,0.981,128,1.036,134,1.003,139,2.82,147,1.592,150,1.719,154,1.003,155,1.059,156,0.951,158,1.592,162,1.181,166,1.094,169,2.347,189,1.003,190,1.354,191,1.284,192,2.021,193,1.118,194,0.901,195,1.118,196,1.118,197,0.901,198,1.118,199,0.854,200,1.418,201,1.118,202,0.854,203,1.118,204,0.854,205,1.118,206,0.854,207,1.118,208,1.63,209,1.118,210,0.854,211,1.118,212,0.854,213,1.118,214,0.901,215,1.118,216,0.901,217,1.118,218,0.854,219,1.118,220,0.854,221,1.118,222,0.854,223,1.118,224,0.854,225,1.003,226,0.854,227,1.059,228,1.118,247,2.88,298,2.394,339,1.704,398,1.059,422,2.269,458,2.001,509,2.483,511,2.82,513,2.82,520,2.001,563,1.324,580,1.324,629,2.269,681,3.328,683,3.074,695,3.074,698,1.405,828,3.074,873,2.54,883,1.593,891,2.269,912,2.68,913,4.465,914,4.465,915,4.847,916,2.158,917,4.465,918,3.392,919,3.038,920,3.134,921,2.608,922,3.392,923,3.134,924,3.783,925,3.392,926,2.68,927,2.478,928,1.831,929,1.704,930,1.704,931,2.608,932,2.381,933,2.608,934,2.381,935,2.68,936,3.038,937,2.158,938,2.158,939,1.831,940,1.831,941,2.381,942,2.68,943,4.465,944,4.465,945,4.465,946,4.465,947,3.818,948,3.392,949,3.818,950,3.818,951,3.818,952,4.465]],["title/components/LikesmatchwebComponent.html",[97,0.262,210,0.984]],["body/components/LikesmatchwebComponent.html",[2,0.202,3,0.135,4,0.101,6,0.135,7,0.811,9,0.573,11,1.575,13,0.963,15,1.146,16,0.021,17,0.906,18,0.363,19,0.868,20,1.852,23,1.242,27,0.868,30,0.773,32,0.405,39,1.318,42,0.202,43,0.17,44,1.064,45,0.791,46,1.039,50,1.957,52,1.141,53,0.888,55,0.674,56,1.008,66,0.011,67,0.015,70,0.311,75,0.533,81,0.724,97,0.477,98,0.711,99,0.93,100,0.93,101,0.93,108,1.497,109,0.88,110,2.131,111,2.01,113,1.249,115,1.249,125,1.662,127,1.141,128,0.905,131,2.121,134,1.497,139,2.464,147,1.392,150,1.686,154,0.834,155,0.88,156,0.791,158,1.392,162,0.982,166,0.956,169,2.28,189,0.834,190,1.184,191,1.122,192,1.852,193,0.93,194,0.749,195,0.93,196,0.93,197,0.749,198,0.93,199,0.711,200,0.711,201,0.93,202,0.711,203,0.93,204,0.711,205,0.93,206,0.711,207,0.93,208,0.749,209,0.93,210,1.416,211,0.93,212,0.711,213,0.93,214,0.749,215,0.93,216,0.749,217,0.93,218,0.711,219,0.93,220,0.711,221,0.93,222,0.711,223,0.93,224,0.711,225,0.834,226,0.711,227,0.88,228,0.93,229,0.542,240,1.417,247,2.638,298,2.193,339,1.417,353,2.121,398,0.88,409,3.134,458,1.749,509,2.412,520,1.749,563,1.101,580,1.101,629,1.983,681,3.232,684,2.279,691,2.964,695,2.686,773,1.523,789,2.464,805,3.534,828,2.686,873,2.492,883,1.324,891,1.983,916,1.794,918,2.964,919,2.732,921,2.279,922,2.964,925,3.553,927,1.242,928,1.523,929,1.417,930,1.417,931,2.279,932,1.98,933,2.279,934,1.98,936,2.732,939,3.534,940,1.523,953,1.98,954,3.337,955,3.337,956,4.44,957,3.337,958,3.337,959,3.902,960,2.686,961,2.606,962,2.686,963,2.686,964,3.575,965,3.575,966,2.121,967,3.575,968,2.686,969,2.606,970,2.686,971,2.606,972,2.606,973,3.511,974,2.464,975,1.646,976,1.523,977,2.229,978,2.229,979,1.794,980,2.686,981,3.279,982,1.794,983,2.686,984,2.686,985,1.794,986,4.283,987,1.794,988,2.229,989,2.229,990,2.229,991,2.229,992,2.229,993,1.98,994,1.98,995,2.229,996,2.229,997,1.646,998,2.229,999,4.283,1000,4.44,1001,4.44,1002,4.44,1003,3.337,1004,3.337,1005,2.964,1006,3.337]],["title/interfaces/Location.html",[132,1.618,229,0.751]],["body/interfaces/Location.html",[2,0.274,3,0.274,4,0.205,6,0.274,16,0.021,18,0.412,42,0.274,66,0.018,67,0.018,70,0.422,71,1.89,75,0.86,86,2.304,132,3.261,156,2.108,229,1.309,256,3.095,726,5.281,727,5.281,1007,4.531,1008,5.298,1009,6.296,1010,6.296]],["title/components/LoginComponent.html",[97,0.262,212,0.984]],["body/components/LoginComponent.html",[2,0.159,3,0.159,4,0.119,6,0.159,7,0.915,9,0.675,11,1.803,12,3.473,13,1.021,15,1.26,16,0.021,17,0.872,18,0.367,19,0.57,20,2.003,26,2.372,27,0.955,30,0.76,31,0.967,32,0.477,33,1.561,39,1.038,42,0.159,43,0.201,44,1.2,45,0.932,46,1.755,53,0.91,54,2.613,56,1.138,66,0.012,67,0.012,70,0.351,75,0.601,81,1.183,97,0.431,98,0.838,99,1.096,100,1.096,101,1.096,108,1.646,109,1.038,110,2.178,111,2.057,113,1.408,115,1.408,125,1.797,127,0.967,128,1.303,134,1.408,147,1.57,154,0.983,155,1.486,162,1.158,166,1.26,189,0.983,190,1.335,191,1.266,192,2.003,193,1.096,194,0.883,195,1.096,196,1.096,197,0.883,198,1.096,199,0.838,200,0.838,201,1.096,202,0.838,203,1.096,204,0.838,205,1.096,206,0.838,207,1.096,208,0.883,209,1.096,210,0.838,211,1.096,212,1.531,213,1.096,214,0.883,215,1.096,216,0.883,217,1.096,218,0.838,219,1.096,220,0.838,221,1.096,222,0.838,223,1.096,224,0.838,225,0.983,226,0.838,227,1.038,228,1.096,233,2.571,235,3.764,239,3.867,243,3.547,252,2.598,257,3.764,270,3.362,286,1.859,295,3.311,403,3.867,405,4.347,415,2.571,416,2.571,435,2.78,444,3.764,455,2.78,529,2.78,563,1.298,569,2.571,580,1.298,601,3.03,639,2.627,661,2.334,693,2.78,694,2.571,748,3.344,765,2.78,873,2.517,886,2.334,889,4.803,1011,2.627,1012,5.289,1013,4.401,1014,4.401,1015,5.616,1016,5.616,1017,4.401,1018,4.401,1019,3.764,1020,3.764,1021,4.401,1022,3.072,1023,2.78,1024,4.401,1025,3.072,1026,4.401,1027,3.072,1028,3.072,1029,4.401,1030,3.072,1031,3.072,1032,3.072,1033,3.072,1034,3.072,1035,4.401]],["title/injectables/MapsControllerService.html",[31,0.793,297,2.28]],["body/injectables/MapsControllerService.html",[2,0.327,3,0.187,4,0.14,6,0.187,7,1.027,9,0.796,13,0.927,15,1.377,16,0.021,17,0.872,18,0.367,19,1.043,26,2.374,27,1.261,29,3.626,30,0.833,31,1.235,32,0.563,37,1.841,42,0.187,43,0.237,45,1.099,52,1.492,55,1.277,66,0.014,67,0.014,70,0.448,74,2.086,76,2.941,81,1.338,97,0.358,127,1.085,128,1.146,132,2.99,149,3.209,166,1.547,182,3.401,184,2.886,236,3.283,252,1.97,262,4.224,297,3.12,331,2.495,342,4.349,345,2.117,393,2.886,406,2.777,416,3.526,417,2.753,424,1.97,448,2.753,450,2.288,451,2.753,454,2.086,456,3.12,494,3.753,549,3.753,562,3.12,625,3.12,650,3.753,687,4.349,708,3.055,710,3.12,726,4.952,727,4.952,730,4.224,805,2.886,810,3.12,1036,5.162,1037,2.753,1038,4.94,1039,4.94,1040,3.623,1041,4.224,1042,4.94,1043,3.623,1044,4.94,1045,5.62,1046,3.401,1047,4.94,1048,3.099,1049,4.94,1050,4.94,1051,3.401,1052,2.495,1053,3.623,1054,3.099,1055,4.224]],["title/interfaces/Marker.html",[229,0.751,1046,2.485]],["body/interfaces/Marker.html",[2,0.235,3,0.235,4,0.175,6,0.235,16,0.021,18,0.454,19,1.345,28,3.452,42,0.235,53,0.842,55,1.48,66,0.016,67,0.016,70,0.362,71,2.423,75,0.782,76,2.93,81,1.353,86,2.008,104,4.897,132,3.109,229,1.191,256,3.345,406,2.502,425,3.125,434,4.351,457,2.866,522,3.617,553,2.163,587,5.635,771,4.897,1046,4.776,1056,3.881,1057,6.589,1058,6.589,1059,6.589,1060,5.727,1061,6.274,1062,5.727,1063,4.538,1064,4.538,1065,3.881]],["title/injectables/MatchingControllerService.html",[31,0.793,298,1.525]],["body/injectables/MatchingControllerService.html",[2,0.111,3,0.111,4,0.083,6,0.111,7,0.698,9,0.471,13,1.014,15,1.505,16,0.021,17,0.954,18,0.402,19,1.141,27,1.37,29,3.817,30,0.721,31,1.118,32,0.332,37,1.088,42,0.111,43,0.14,45,0.65,52,0.737,53,0.937,66,0.009,67,0.015,70,0.499,81,0.623,86,2.351,91,3.417,127,0.737,128,0.779,158,2.084,166,1.617,236,2.973,237,3.956,245,2.55,247,1.705,248,4.996,252,1.338,256,3.154,298,1.418,342,3.717,345,1.251,396,3.56,398,0.723,406,1.338,417,1.627,422,3.387,439,3.54,446,3.56,448,1.627,449,1.831,450,1.352,451,1.627,509,2.605,515,1.961,520,2.808,522,3.69,530,1.961,553,2.784,617,1.961,625,2.12,629,1.705,644,2.87,681,3.441,700,3.858,722,3.176,814,2.87,836,3.69,891,3.522,929,1.164,1037,1.627,1041,4.007,1048,1.831,1055,1.831,1066,5.357,1067,3.356,1068,3.356,1069,3.356,1070,3.356,1071,3.356,1072,3.356,1073,3.356,1074,3.356,1075,3.356,1076,2.142,1077,3.356,1078,6.665,1079,2.142,1080,3.356,1081,6.721,1082,4.686,1083,5.843,1084,3.356,1085,2.142,1086,3.356,1087,2.142,1088,4.686,1089,3.356,1090,3.356,1091,3.356,1092,2.142,1093,3.356,1094,3.356,1095,3.356,1096,3.356,1097,4.139,1098,3.356,1099,3.356,1100,2.142,1101,3.356,1102,3.356,1103,3.356,1104,2.142,1105,3.356,1106,2.142,1107,4.686,1108,3.356,1109,2.142,1110,1.627,1111,4.139,1112,2.142,1113,1.831,1114,2.142,1115,2.142,1116,2.142,1117,2.142,1118,3.356,1119,3.356,1120,3.356,1121,3.356,1122,2.142,1123,3.356]],["title/components/NavbarComponent.html",[97,0.262,216,1.038]],["body/components/NavbarComponent.html",[2,0.136,3,0.136,4,0.102,6,0.136,7,0.817,9,0.863,10,1.537,11,1.693,12,3.261,13,1.001,15,0.644,16,0.021,17,0.81,18,0.257,19,0.488,20,1.677,26,2.203,27,0.968,30,0.713,32,0.408,33,1.337,39,0.889,42,0.136,43,0.172,44,1.071,46,1.875,52,1.146,53,0.922,54,2.819,55,1.348,56,1.016,65,2.295,66,0.011,67,0.011,70,0.313,75,0.537,92,2.482,97,0.504,98,0.717,99,0.938,100,0.938,101,0.938,103,2.225,108,1.505,109,0.889,110,2.134,111,2.033,113,1.257,115,1.257,125,1.669,127,1.427,128,1.359,129,2.705,134,1.505,147,2.089,150,1.192,154,0.842,155,0.889,156,0.798,162,0.992,166,1.152,169,2.351,189,0.842,190,1.192,191,1.13,192,1.86,193,0.938,194,0.757,195,0.938,196,0.938,197,0.757,198,0.938,199,0.717,200,1.282,201,0.938,202,0.717,203,0.938,204,0.717,205,0.938,206,0.717,207,0.938,208,0.757,209,0.938,210,0.717,211,0.938,212,0.717,213,0.938,214,0.757,215,0.938,216,1.5,217,0.938,218,0.717,219,0.938,220,0.717,221,0.938,222,0.717,223,0.938,224,0.717,225,0.842,226,0.717,227,0.889,228,0.938,240,2.136,295,3.24,301,2.651,403,1.811,405,3.295,406,1.567,410,2.985,412,4.449,415,2.295,438,2.136,454,1.66,455,2.482,456,3.295,457,2.482,491,3.36,506,2.25,563,1.986,580,1.111,581,2.985,661,1.999,694,2.295,698,1.761,757,3.36,833,2.705,873,2.338,874,4.47,875,4.461,882,3.36,883,2.651,884,2.985,885,2.25,886,3.573,887,3.36,930,2.136,1020,3.36,1124,2.25,1125,3.929,1126,3.929,1127,3.929,1128,5.582,1129,4.703,1130,3.929,1131,3.929,1132,3.929,1133,3.929,1134,3.36,1135,3.929,1136,2.631,1137,2.631,1138,3.929,1139,3.929,1140,3.929,1141,3.36,1142,3.929,1143,2.631,1144,2.631,1145,3.36,1146,2.631,1147,3.929,1148,2.631,1149,2.631,1150,3.929,1151,2.631,1152,2.631,1153,2.631,1154,2.631,1155,3.929]],["title/interfaces/Office.html",[137,1.962,229,0.751]],["body/interfaces/Office.html",[2,0.263,3,0.263,4,0.197,6,0.263,16,0.021,17,1.108,18,0.432,42,0.263,53,0.651,66,0.017,67,0.017,70,0.406,71,1.817,75,0.84,76,2.898,81,1.325,86,2.114,91,3.401,132,2.756,137,3.986,150,1.545,229,1.279,515,3.593,1156,4.357,1157,6.15,1158,6.15,1159,6.15]],["title/directives/PlacesAutocompleteDirective.html",[56,0.933,226,0.984]],["body/directives/PlacesAutocompleteDirective.html",[2,0.203,3,0.203,4,0.152,6,0.203,7,1.083,9,0.861,13,1.028,15,0.96,16,0.021,17,0.608,18,0.382,19,0.728,27,0.967,30,0.747,31,1.144,32,0.608,42,0.203,43,0.256,44,1.42,45,1.189,46,2.485,52,1.144,53,0.665,56,1.512,66,0.015,67,0.015,70,0.415,72,3.956,75,0.712,108,1.872,109,1.324,110,1.58,125,1.994,127,1.369,128,1.446,134,1.254,142,2.334,166,1.433,169,1.963,190,1.58,191,2.032,226,1.42,227,1.759,251,3.042,277,4.443,286,2.2,331,2.698,347,4.928,372,5.329,398,1.759,406,2.076,529,3.289,530,3.042,617,3.042,751,2.698,759,4.735,966,2.831,1160,5.547,1161,3.351,1162,6.232,1163,5.848,1164,3.919,1165,5.547,1166,6.997,1167,5.208,1168,6.669,1169,5.848,1170,5.208,1171,6.232,1172,3.919,1173,5.208,1174,4.453,1175,5.848,1176,3.919,1177,5.208,1178,3.351,1179,3.919,1180,3.919,1181,3.919,1182,3.919,1183,3.919,1184,3.919,1185,3.919,1186,3.919,1187,3.919]],["title/interfaces/Register.html",[229,0.751,569,2.109]],["body/interfaces/Register.html",[2,0.312,3,0.256,4,0.191,6,0.256,16,0.021,17,0.938,18,0.426,42,0.256,53,0.933,55,1.279,66,0.017,67,0.017,70,0.395,71,1.765,74,2.091,75,0.826,81,1.355,97,0.359,103,2.155,107,5.168,142,3.216,143,4.591,229,1.256,270,3.853,393,2.892,426,4.141,435,3.126,553,2.359,569,3.531,765,4.291,1188,4.233,1189,6.044,1190,6.044,1191,4.591]],["title/components/RideswipeComponent.html",[97,0.262,218,0.984]],["body/components/RideswipeComponent.html",[2,0.207,3,0.207,4,0.155,6,0.207,7,1.097,9,0.878,13,0.871,16,0.021,17,0.917,27,0.742,30,0.511,32,0.621,42,0.207,43,0.261,44,1.439,53,0.674,56,1.364,66,0.015,67,0.018,70,0.319,75,0.721,97,0.496,98,1.09,99,1.426,100,1.426,101,1.426,108,1.89,109,1.35,110,2.242,111,2.12,113,1.689,115,1.689,125,2.01,127,1.159,134,1.279,150,1.6,154,2.189,155,1.995,156,1.213,186,3.082,189,1.279,190,1.6,191,1.517,192,2.24,193,1.426,194,1.15,195,1.426,196,1.426,197,1.15,198,1.426,199,1.09,200,1.09,201,1.426,202,1.09,203,1.426,204,1.09,205,1.426,206,1.09,207,1.426,208,1.15,209,1.426,210,1.09,211,1.426,212,1.09,213,1.426,214,1.15,215,1.426,216,1.15,217,1.426,218,1.712,219,1.426,220,1.09,221,1.426,222,1.09,223,1.426,224,1.09,225,1.279,226,1.09,227,1.35,228,1.426,408,4.512,438,3.646,683,4.882,684,3.669,687,4.066,698,2.365,699,3.419,748,4.009,751,2.752,821,4.009,1192,3.419,1193,4.512,1194,5.277,1195,5.277,1196,3.998,1197,5.277,1198,3.998]],["title/interfaces/RouteInfo.html",[229,0.751,1052,2.485]],["body/interfaces/RouteInfo.html",[2,0.27,3,0.27,4,0.202,6,0.27,16,0.021,18,0.408,26,2.986,42,0.27,66,0.017,67,0.017,70,0.416,75,0.853,86,2.296,89,5.336,229,1.297,252,2.081,424,2.081,624,3.965,710,4.532,722,2.837,1051,4.296,1052,4.296,1199,4.463,1200,5.219,1201,6.917,1202,6.917,1203,6.24]],["title/classes/SwipecardModel.html",[43,0.236,924,2.28]],["body/classes/SwipecardModel.html",[2,0.266,3,0.266,4,0.199,6,0.266,13,1.021,16,0.021,18,0.336,30,0.657,42,0.266,43,0.404,53,0.951,66,0.017,67,0.017,70,0.41,71,2.206,75,0.845,155,1.737,156,1.56,158,2.206,190,1.876,524,4.397,553,2.947,698,2.772,722,3.362,924,3.906,941,5.433,1204,4.397,1205,6.882,1206,5.142,1207,5.142]],["title/injectables/TokenStorage.html",[31,0.793,418,2.28]],["body/injectables/TokenStorage.html",[2,0.232,3,0.232,4,0.173,6,0.232,7,1.364,9,0.984,13,0.937,15,1.097,16,0.021,17,0.695,18,0.293,19,0.832,27,1.218,30,0.572,31,1.37,32,0.695,40,2.829,41,2.276,42,0.232,43,0.293,50,2.351,55,1.612,66,0.016,67,0.016,70,0.453,81,1.304,134,1.434,136,3.91,147,2.339,153,2.886,166,1.097,252,2.615,282,3.91,398,1.513,415,4.191,418,3.587,425,4.515,426,4.307,445,3.404,687,4.761,751,3.084,874,4.836,1208,3.404,1209,6.558,1210,5.68,1211,4.48,1212,5.68,1213,4.48,1214,3.404,1215,3.831,1216,4.48,1217,4.48]],["title/injectables/UploadService.html",[31,0.793,1218,2.743]],["body/injectables/UploadService.html",[2,0.181,3,0.181,4,0.279,6,0.181,7,1.005,9,1.214,13,1.031,15,0.86,16,0.021,17,0.925,18,0.316,19,0.652,27,1.27,30,0.617,31,1.372,32,0.545,40,2.216,41,2.808,42,0.181,43,0.229,48,3.936,49,3.327,52,1.481,55,1.668,65,2.05,66,0.014,67,0.014,70,0.385,74,2.041,75,0.66,81,1.026,86,1.123,92,2.216,97,0.35,103,1.252,127,1.062,128,1.121,129,3.327,136,3.327,142,1.573,150,1.466,155,1.185,156,1.064,166,1.184,169,1.821,233,2.05,282,3.327,286,2.041,398,1.867,431,2.416,454,2.041,508,4.133,522,3.761,529,2.216,553,2.303,601,2.416,632,4.133,698,1.573,993,2.666,994,3.671,1113,3.001,1218,3.671,1219,3.001,1220,6.92,1221,5.093,1222,4.833,1223,7.242,1224,6.838,1225,5.955,1226,4.833,1227,6.455,1228,5.955,1229,4.833,1230,4.833,1231,3.509,1232,4.833,1233,3.509,1234,5.527,1235,3.509,1236,4.133,1237,3.001,1238,3.509,1239,3.509,1240,3.509,1241,3.509,1242,3.509,1243,3.509,1244,2.05,1245,3.509,1246,3.509,1247,3.509,1248,3.509,1249,3.509,1250,3.509,1251,3.509,1252,3.509,1253,3.509,1254,5.527,1255,3.509,1256,3.509,1257,3.509,1258,3.509,1259,4.833,1260,5.955,1261,3.509,1262,3.509,1263,3.509,1264,3.509]],["title/interfaces/User.html",[53,0.461,229,0.751]],["body/interfaces/User.html",[2,0.179,3,0.179,4,0.134,6,0.179,16,0.021,17,0.92,18,0.468,19,0.889,28,2.79,30,0.794,42,0.179,48,3.461,50,1.806,53,0.899,66,0.013,67,0.013,75,0.655,76,2.716,81,1.37,83,2.604,86,1.757,91,3.065,117,4.5,131,2.604,137,3.583,147,1.709,148,2.799,149,2.434,150,1.453,158,1.709,169,1.806,200,1.859,225,1.533,229,0.996,245,3.64,261,4.097,270,3.22,406,1.91,416,2.799,424,1.91,433,3.741,435,3.026,438,2.604,515,2.799,520,3.094,525,2.964,562,3.026,622,4.281,626,3.468,629,3.659,756,4.097,764,3.64,765,3.741,840,3.64,927,3.29,948,2.633,1005,4.5,1054,2.964,1265,2.964,1266,5.499,1267,5.066,1268,5.066,1269,5.924,1270,6.431,1271,4.791,1272,4.791,1273,4.791,1274,4.791,1275,4.097,1276,4.097,1277,4.791,1278,4.791,1279,4.791,1280,3.466,1281,3.466]],["title/interfaces/UserCard.html",[229,0.751,409,1.72]],["body/interfaces/UserCard.html",[2,0.278,3,0.172,4,0.129,6,0.172,11,1.412,16,0.021,18,0.351,20,1.66,23,1.585,30,0.833,32,0.516,39,1.572,42,0.241,43,0.217,44,0.907,45,1.009,46,1.326,50,1.755,52,1.023,53,0.919,55,1.203,66,0.013,67,0.015,70,0.265,75,0.636,81,1.178,97,0.444,108,1.49,110,1.009,111,0.956,113,1.064,115,1.064,125,1.064,127,1.023,128,0.772,139,2.1,147,1.186,150,1.765,158,1.186,162,1.253,166,1.14,169,2.392,210,0.907,229,0.968,240,2.53,247,2.365,298,1.966,339,1.807,353,2.53,398,1.123,409,3.025,458,2.086,509,2.442,520,2.086,563,1.404,580,1.404,629,1.689,681,3.112,684,1.942,691,2.526,695,2.289,773,2.719,789,3.868,805,3.807,828,2.289,873,2.086,883,1.689,891,1.689,918,2.526,919,2.719,921,1.942,922,2.526,925,4.081,927,1.585,928,1.942,929,1.807,930,1.807,931,2.719,932,2.526,933,2.719,934,2.526,936,3.138,939,3.138,940,1.942,953,2.526,954,2.843,955,2.843,956,2.843,960,2.289,962,2.289,963,2.289,964,3.205,965,3.205,966,1.807,967,4.37,968,2.289,970,2.289,973,3.868,974,2.94,975,2.1,976,1.942,977,3.981,978,3.981,979,2.289,980,3.205,981,3.675,982,2.289,983,3.205,984,3.205,985,2.289,986,4.578,987,2.289,988,2.843,989,2.843,990,2.843,991,2.843,992,2.843,993,2.526,994,2.526,995,2.843,996,2.843,997,2.1,998,2.843,999,4.578]],["title/interfaces/UserCard-1.html",[229,0.627,409,1.437,1244,1.761]],["body/interfaces/UserCard-1.html",[2,0.145,3,0.145,4,0.108,6,0.213,11,1.481,16,0.021,18,0.319,20,1.469,23,1.336,30,0.812,31,0.616,32,0.435,39,1.391,42,0.145,43,0.183,44,0.764,45,0.85,46,1.118,50,1.057,52,1.073,53,0.934,57,2.406,66,0.012,67,0.018,70,0.223,71,1.919,74,1.184,75,0.563,81,1.113,83,1.524,86,1.722,97,0.39,103,1,108,1.318,110,0.85,111,0.806,113,0.897,115,0.897,125,0.897,127,1.182,128,0.956,147,1.741,150,0.85,153,2.48,154,1.562,158,1,162,1.057,166,1.468,169,2.16,184,2.406,186,2.406,190,1.249,191,0.806,222,0.764,225,1.318,229,0.856,240,2.239,247,2.092,298,2.062,339,1.524,353,2.239,395,2.835,398,0.947,409,3.028,454,1.739,458,1.846,492,3.361,496,3.361,509,1.118,520,2.411,530,1.637,554,3.129,559,2.13,563,2.273,580,1.184,641,2.13,681,1.424,684,1.637,700,2.406,722,2.239,780,2.13,789,3.62,805,3.618,810,1.77,836,3.083,873,1.256,883,1.424,919,2.406,921,1.637,927,1.336,928,1.637,929,1.524,930,1.524,931,2.406,933,2.852,936,2.852,937,1.93,938,1.93,939,3.712,940,1.637,960,1.93,962,1.93,963,1.93,964,2.835,965,2.835,966,1.524,967,4.126,968,1.93,970,1.93,973,3.62,974,2.601,975,1.77,976,1.637,979,1.93,980,2.835,981,3.398,982,1.93,983,2.835,984,2.835,985,1.93,986,4.374,987,1.93,997,2.601,999,4.374,1023,3.083,1110,2.13,1244,2.852,1282,2.13,1283,2.835,1284,2.397,1285,2.397,1286,2.397,1287,2.13,1288,2.13,1289,2.13,1290,2.13,1291,2.397,1292,2.13,1293,2.13,1294,4.174,1295,2.397,1296,2.397,1297,4.553,1298,2.397,1299,2.397,1300,2.13,1301,2.397,1302,4.601,1303,3.129,1304,5.124,1305,2.13,1306,3.129,1307,2.13,1308,2.397,1309,2.397]],["title/components/UsercardComponent.html",[97,0.262,220,0.984]],["body/components/UsercardComponent.html",[2,0.203,3,0.102,4,0.152,6,0.203,7,0.655,9,0.434,11,1.485,13,1.082,15,0.962,16,0.021,17,0.882,18,0.408,19,0.729,20,1.599,23,1.872,27,0.909,28,1.996,30,0.748,31,0.692,32,0.307,39,1.064,42,0.102,43,0.129,44,0.859,45,0.6,46,0.788,50,1.188,52,0.985,53,0.884,56,0.814,66,0.009,67,0.016,68,1.361,70,0.251,71,1.599,74,1.331,75,0.431,76,1.331,81,0.968,83,1.075,86,1.008,97,0.424,98,0.539,99,0.705,100,0.705,101,0.705,103,1.124,108,1.257,109,0.668,110,2.039,111,1.919,113,1.008,115,1.008,125,1.434,127,1.076,128,1.04,132,1.412,134,1.567,138,3.36,147,2.088,150,0.956,153,2.277,154,1.751,155,1.848,156,1.66,158,1.599,162,0.745,166,0.962,169,1.966,189,0.633,190,0.956,191,1.574,192,1.599,193,0.705,194,0.569,195,0.705,196,0.705,197,0.569,198,0.705,199,0.539,200,1.071,201,0.705,202,0.539,203,0.705,204,0.539,205,0.705,206,0.539,207,0.705,208,0.569,209,0.705,210,0.539,211,0.705,212,0.539,213,0.705,214,0.569,215,0.705,216,0.569,217,0.705,218,0.539,219,0.705,220,1.222,221,0.705,222,0.539,223,0.705,224,0.539,225,0.633,226,0.539,227,0.668,228,0.705,247,1.601,298,2.068,339,1.075,353,3.183,398,0.668,409,1.502,433,1.99,454,1.893,458,1.412,520,1.412,530,1.841,553,1.502,563,2.4,580,0.835,648,1.155,683,2.17,690,1.99,694,1.841,698,0.886,759,1.502,790,1.691,806,1.361,809,2.394,811,3.36,821,2.394,873,2.009,883,1.005,884,1.502,891,1.601,915,4.461,916,1.361,919,2.295,921,1.841,924,3.588,926,1.691,927,0.942,928,1.155,929,1.075,930,1.075,931,1.841,933,2.295,935,1.691,936,2.295,937,1.361,938,1.361,939,2.618,940,1.155,941,1.502,942,1.691,947,2.695,948,2.394,949,2.695,950,2.695,951,2.695,973,3.294,974,1.99,975,2.481,976,1.155,981,3.092,1065,2.695,1165,4.68,1174,2.695,1221,2.695,1244,2.618,1283,2.17,1287,2.394,1288,2.394,1289,1.502,1290,1.502,1292,4.933,1293,1.502,1303,1.502,1305,1.502,1306,1.502,1307,1.502,1310,1.691,1311,3.151,1312,3.151,1313,4.482,1314,4.482,1315,4.482,1316,4.482,1317,4.482,1318,4.482,1319,4.482,1320,4.482,1321,3.151,1322,3.929,1323,3.151,1324,3.151,1325,1.977,1326,4.896,1327,1.977,1328,3.151,1329,1.977,1330,5.472,1331,3.929,1332,1.977,1333,1.977,1334,3.929,1335,4.482,1336,1.977,1337,3.833,1338,4.482,1339,1.977,1340,1.977,1341,1.977,1342,1.977,1343,5.472,1344,3.151,1345,5.472,1346,3.151,1347,1.977,1348,3.151,1349,3.151,1350,3.929,1351,4.482,1352,3.151,1353,1.977,1354,3.151,1355,1.977,1356,3.929,1357,1.977,1358,3.151,1359,1.977,1360,1.977,1361,1.977,1362,1.977,1363,1.977,1364,1.977,1365,1.977,1366,1.977,1367,1.977,1368,3.151,1369,1.977,1370,1.977,1371,1.977,1372,3.151,1373,1.977,1374,1.977,1375,1.977,1376,1.977,1377,1.977,1378,1.977,1379,1.977,1380,1.977,1381,1.977,1382,1.977,1383,1.977,1384,3.151,1385,1.977,1386,1.977,1387,1.977,1388,1.977,1389,1.977,1390,3.151,1391,5.216,1392,3.151,1393,1.977,1394,4.482,1395,1.977,1396,1.977,1397,1.977,1398,1.977,1399,4.482,1400,4.482,1401,3.151,1402,3.151,1403,3.151,1404,1.977,1405,3.151,1406,1.977]],["title/components/UsermatchwebComponent.html",[97,0.262,222,0.984]],["body/components/UsermatchwebComponent.html",[2,0.112,3,0.112,4,0.084,6,0.216,7,0.704,9,0.476,11,1.552,13,0.968,15,1.155,16,0.021,17,0.88,18,0.355,19,0.875,20,1.682,23,1.032,27,0.95,30,0.749,31,0.744,32,0.336,39,1.144,42,0.112,43,0.142,44,0.923,45,0.657,46,0.864,50,1.277,52,1.124,53,0.923,56,0.875,57,1.266,66,0.009,67,0.018,70,0.408,71,1.208,74,1.431,75,0.463,81,0.629,83,1.178,86,1.877,97,0.437,98,0.591,99,0.773,100,0.773,101,0.773,103,1.208,108,1.335,109,0.732,110,2.072,111,1.951,113,1.084,115,1.084,125,1.509,127,1.245,128,1.094,131,1.841,134,1.637,147,1.825,148,1.979,149,1.721,150,1.027,153,2.119,154,1.814,155,0.732,156,0.657,158,1.208,162,0.817,166,1.329,169,1.929,184,1.979,186,1.266,189,0.693,190,1.265,191,1.199,192,1.682,193,0.773,194,0.623,195,0.773,196,0.773,197,0.623,198,0.773,199,0.591,200,0.591,201,0.773,202,0.591,203,0.773,204,0.591,205,0.773,206,0.591,207,0.773,208,0.623,209,0.773,210,0.591,211,0.773,212,0.591,213,0.773,214,0.623,215,0.773,216,0.623,217,0.773,218,0.591,219,0.773,220,0.591,221,0.773,222,1.286,223,0.773,224,0.591,225,1.084,226,0.591,227,0.732,228,0.773,229,0.45,240,1.178,247,1.721,298,2.161,339,1.178,353,1.841,395,1.492,398,0.732,409,3.085,454,1.992,458,1.518,470,2.573,492,2.871,496,2.871,509,0.864,520,1.869,530,1.979,554,3.582,559,1.646,563,1.992,580,0.915,616,2.573,641,2.573,681,1.101,684,1.979,700,3.311,707,2.573,708,1.841,710,2.139,722,1.178,780,3.582,789,2.139,805,3.311,810,2.139,836,2.634,873,2.113,883,1.101,916,1.492,919,2.436,921,1.979,927,1.032,928,1.266,929,1.178,930,1.178,931,1.979,933,2.436,936,2.436,937,1.492,938,1.492,939,3.827,940,1.266,957,2.896,958,2.896,960,2.332,962,2.332,963,2.332,964,3.246,965,3.246,966,1.841,967,3.246,968,2.332,970,2.332,973,3.232,974,2.139,975,1.368,976,1.266,979,1.492,980,2.332,981,2.978,982,1.492,983,2.332,984,2.332,985,1.492,986,4.038,987,1.492,997,2.139,999,4.038,1000,4.032,1001,4.032,1002,2.896,1003,4.032,1004,2.896,1005,2.573,1006,2.896,1023,2.634,1051,2.332,1110,1.646,1244,2.436,1282,1.646,1283,1.492,1284,2.896,1285,2.896,1286,2.896,1287,1.646,1288,2.573,1289,1.646,1290,1.646,1291,1.853,1292,1.646,1293,1.646,1294,3.566,1295,2.896,1296,2.896,1297,4.456,1298,2.896,1299,2.896,1300,1.646,1301,1.853,1302,4.032,1303,2.573,1304,4.639,1305,1.646,1306,2.573,1307,1.646,1308,1.853,1309,1.853,1407,3.387,1408,2.166,1409,2.166,1410,2.166,1411,2.166,1412,2.166,1413,2.166,1414,3.387]],["title/components/ViewProfileComponent.html",[97,0.262,224,0.984]],["body/components/ViewProfileComponent.html",[2,0.187,3,0.09,4,0.067,6,0.09,7,0.592,9,0.383,10,1.018,11,1.263,13,1.107,15,0.427,16,0.021,17,1.053,18,0.407,19,0.324,20,1.287,23,1.357,27,0.965,30,0.532,31,0.626,32,0.271,39,0.589,42,0.09,43,0.114,44,0.776,45,0.529,52,0.915,53,0.932,54,1.203,55,1.077,56,0.736,57,1.663,66,0.008,67,0.014,70,0.227,71,1.015,74,2.29,75,0.389,76,2.29,77,3.562,81,1.272,83,2.947,91,1.357,97,0.406,98,0.475,99,0.622,100,0.622,101,0.622,103,1.757,108,1.155,109,0.589,110,1.992,111,1.872,112,1.96,113,0.911,115,0.911,117,3.165,119,3.562,120,3.562,123,3.562,125,1.333,127,1.191,128,1.258,131,0.948,134,1.663,137,3.429,142,0.781,147,1.933,148,2.433,149,2.116,150,0.864,153,2.116,154,1.89,155,0.962,156,0.864,158,1.757,162,0.657,163,1.491,166,0.427,167,1.491,169,2.271,174,2.435,179,1.491,180,1.491,186,2.433,187,2.435,189,0.558,190,1.888,191,0.819,192,1.486,193,0.622,194,0.501,195,0.622,196,0.622,197,0.501,198,0.622,199,0.475,200,0.984,201,0.622,202,0.475,203,0.622,204,0.475,205,0.622,206,0.475,207,0.622,208,0.501,209,0.622,210,0.475,211,0.622,212,0.475,213,0.622,214,0.501,215,0.622,216,0.501,217,0.622,218,0.475,219,0.622,220,0.475,221,0.622,222,0.475,223,0.622,224,1.136,225,1.795,226,0.475,227,0.589,228,0.622,243,1.798,246,4.933,269,3.562,270,3.597,279,3.742,301,1.447,362,4.644,395,4.148,422,2.754,424,1.135,425,1.96,433,3.423,438,1.548,454,1.203,470,1.325,477,1.491,479,1.491,483,3.086,485,1.491,487,1.491,489,1.491,509,2.161,511,1.798,513,1.798,515,1.663,557,5.567,562,1.798,580,0.736,626,2.631,629,2.85,648,1.663,653,2.435,693,1.798,698,1.276,707,3.165,708,1.548,764,4.118,765,2.631,769,2.163,772,2.435,773,3.167,795,2.435,806,2.868,817,3.562,858,2.435,873,1.867,891,2.754,927,2.583,966,2.264,997,1.798,1012,2.435,1023,1.798,1134,3.562,1145,4.212,1191,2.163,1266,4.212,1267,3.562,1268,3.562,1275,4.635,1276,2.435,1283,1.96,1415,5.769,1416,1.491,1417,6.026,1418,2.847,1419,2.847,1420,4.165,1421,4.165,1422,4.165,1423,4.165,1424,4.165,1425,4.165,1426,2.847,1427,1.743,1428,1.743,1429,1.743,1430,1.743,1431,1.743,1432,2.847,1433,1.743,1434,2.847,1435,2.847,1436,1.743,1437,1.743,1438,1.743,1439,6.026,1440,1.743,1441,1.743,1442,1.743,1443,2.847,1444,1.743,1445,1.743,1446,1.743,1447,1.743,1448,1.743,1449,2.847,1450,1.743,1451,1.743,1452,1.743,1453,2.847,1454,1.743,1455,2.847,1456,1.743,1457,2.847,1458,1.743,1459,2.847,1460,1.743,1461,1.743,1462,1.743,1463,3.608,1464,1.743,1465,1.743,1466,1.743,1467,1.743,1468,1.743,1469,1.743,1470,1.743,1471,1.743,1472,1.743,1473,1.743,1474,1.743,1475,2.847,1476,1.743,1477,1.743,1478,1.743,1479,2.847,1480,1.743,1481,1.743,1482,1.743,1483,3.608,1484,1.743,1485,1.743,1486,1.743,1487,5.421,1488,2.847,1489,2.847,1490,2.847,1491,2.847,1492,2.847,1493,1.743,1494,2.847,1495,2.847,1496,2.847,1497,1.743]],["title/coverage.html",[1498,4.213]],["body/coverage.html",[4,0.142,11,1.112,16,0.021,18,0.24,31,1.47,43,0.415,53,0.468,56,0.948,66,0.014,67,0.014,68,2.524,69,3.135,97,0.526,98,1,102,3.135,132,1.643,137,1.993,142,1.643,194,1.054,197,1.054,199,1,200,1,202,1,204,1,206,1,208,1.054,210,1,212,1,214,1.054,216,1.054,218,1,220,1,222,1,224,1,226,1,229,1.451,230,2.524,231,2.785,232,2.785,264,3.135,295,1.863,297,2.315,298,1.549,325,2.524,347,2.785,359,2.524,362,2.524,375,2.785,376,3.135,409,2.373,414,3.135,418,2.315,420,2.524,434,2.785,450,3.145,497,3.135,507,3.135,526,3.135,527,3.135,563,1.549,569,2.142,573,3.135,622,2.524,623,2.785,624,3.783,679,3.135,700,2.142,701,3.135,711,2.785,712,3.135,745,3.135,746,3.135,867,3.135,912,3.135,924,2.315,953,3.783,1007,3.135,1011,3.135,1036,3.135,1037,4.296,1046,2.524,1052,2.524,1056,3.135,1066,3.135,1124,3.135,1156,3.135,1160,3.135,1161,3.135,1188,3.135,1192,3.135,1199,3.135,1204,3.135,1208,3.783,1214,2.785,1218,2.785,1219,3.135,1265,3.135,1282,3.783,1310,3.135,1415,3.135,1416,3.135,1498,3.135,1499,3.666,1500,3.666,1501,7.537,1502,6.541,1503,3.666,1504,4.979,1505,3.666,1506,4.979,1507,3.666,1508,6.808,1509,6.541,1510,5.655,1511,6.066,1512,3.666,1513,3.666,1514,3.666,1515,3.666,1516,6.342,1517,3.666,1518,3.666,1519,3.666,1520,3.666,1521,3.666,1522,3.666,1523,3.666,1524,3.666,1525,4.818,1526,3.135,1527,3.135,1528,4.258,1529,3.135,1530,3.666]],["title/dependencies.html",[286,1.834,1531,3.014]],["body/dependencies.html",[16,0.021,32,0.788,33,2.579,37,3.118,66,0.017,67,0.017,286,2.144,288,3.856,307,5.248,308,4.225,314,4.341,317,3.856,318,4.341,331,3.495,352,4.341,353,2.759,354,4.341,388,4.341,976,2.965,1178,4.341,1237,4.341,1532,5.076,1533,5.076,1534,7.328,1535,5.076,1536,6.137,1537,5.076,1538,5.076,1539,5.076,1540,5.076,1541,5.076,1542,5.076,1543,5.076,1544,5.076,1545,5.076,1546,5.076,1547,5.076,1548,5.076,1549,5.076,1550,5.076,1551,5.076,1552,5.076,1553,5.076,1554,5.076,1555,5.076,1556,5.076]],["title/miscellaneous/enumerations.html",[1557,1.761,1558,3.713]],["body/miscellaneous/enumerations.html",[2,0.253,6,0.184,16,0.021,18,0.364,23,2.858,27,0.662,53,0.625,66,0.014,67,0.014,71,1.988,74,1.507,91,1.7,112,3.365,150,1.082,156,2.311,231,2.71,232,3.713,233,2.084,251,2.084,255,3.713,256,2.084,259,3.051,260,3.051,263,4.18,424,1.423,509,1.949,545,2.456,623,2.71,626,2.253,755,3.051,784,4.18,785,4.18,786,4.18,836,3.087,891,2.483,903,3.051,927,2.329,1191,3.713,1297,4.236,1300,2.71,1557,2.084,1558,3.051,1559,3.568,1560,4.888,1561,3.568,1562,4.888,1563,3.568,1564,3.568,1565,3.568,1566,3.568,1567,3.568,1568,3.568,1569,3.568,1570,3.568,1571,3.051,1572,3.568,1573,4.888,1574,3.568,1575,3.568,1576,3.568,1577,3.568,1578,3.568,1579,3.568,1580,3.568,1581,3.568,1582,3.568,1583,3.568,1584,3.568,1585,3.568,1586,3.568,1587,3.568,1588,3.568,1589,3.568,1590,3.568,1591,3.568,1592,3.568,1593,3.568,1594,3.568,1595,3.568,1596,3.568,1597,3.568,1598,3.568,1599,3.568,1600,3.568,1601,3.568,1602,3.568,1603,3.568,1604,3.568,1605,3.568,1606,3.568,1607,3.568,1608,3.568,1609,3.568,1610,3.568,1611,3.568,1612,3.568,1613,3.568,1614,3.568,1615,3.568,1616,3.568,1617,3.568,1618,3.568,1619,3.568,1620,3.568,1621,3.568,1622,3.568,1623,3.568,1624,3.568,1625,3.568,1626,3.568,1627,3.568,1628,3.568,1629,3.568,1630,3.568,1631,3.568,1632,3.568,1633,3.568,1634,3.568,1635,3.568,1636,3.568,1637,3.568,1638,3.568,1639,3.568,1640,3.568,1641,3.568,1642,3.568,1643,3.568,1644,3.568,1645,3.568,1646,3.568,1647,3.568,1648,3.051,1649,3.568,1650,3.568,1651,3.568,1652,3.568,1653,3.568,1654,3.568,1655,3.568,1656,3.568,1657,3.568,1658,3.568,1659,3.568,1660,3.568,1661,3.568,1662,3.568,1663,3.568,1664,3.568,1665,3.568,1666,3.568,1667,3.568,1668,3.568,1669,3.568,1670,3.568,1671,3.568,1672,3.568]],["title/index.html",[6,0.156,708,1.639,1023,1.904]],["body/index.html",[3,0.206,4,0.154,16,0.02,17,0.619,41,2.026,55,1.622,56,1.03,66,0.015,67,0.015,70,0.42,96,3.409,97,0.427,111,1.146,142,2.812,149,3.188,182,4.319,237,3.077,239,3.626,265,3.029,276,3.409,301,2.026,304,5.044,305,4.504,317,5.192,381,3.409,416,3.077,422,3.473,424,1.59,431,2.744,437,4.956,440,3.409,455,2.518,552,3.409,617,3.077,642,3.029,650,3.029,651,4.504,652,5.731,673,3.409,690,2.518,693,2.518,743,3.409,747,3.409,769,3.029,773,3.077,779,3.409,804,3.409,815,3.409,846,3.409,859,3.409,892,3.409,899,5.044,900,3.409,966,3.715,1019,4.504,1051,2.744,1141,3.409,1193,3.409,1236,3.409,1571,4.504,1648,3.409,1673,3.986,1674,5.898,1675,3.986,1676,5.267,1677,5.844,1678,3.986,1679,3.986,1680,3.986,1681,6.524,1682,3.986,1683,3.986,1684,5.267,1685,3.986,1686,3.986,1687,3.409,1688,7.191,1689,3.029,1690,3.986,1691,3.986,1692,5.898,1693,5.267,1694,7.087,1695,3.986,1696,3.986,1697,6.524,1698,5.267,1699,5.898,1700,3.986,1701,5.898,1702,3.986,1703,5.898,1704,3.986,1705,6.524,1706,3.986,1707,3.986,1708,3.986,1709,3.986,1710,3.986,1711,5.267,1712,3.986,1713,3.986,1714,3.986,1715,3.986,1716,3.986,1717,5.267,1718,5.267,1719,3.409,1720,3.986,1721,3.986]],["title/modules.html",[284,2.678]],["body/modules.html",[16,0.018,66,0.018,67,0.018,284,3.137,285,3.972,294,3.644,308,3.972,528,4.384,545,3.972,833,4.556,1722,5.77,1723,5.77]],["title/overview.html",[1689,3.743]],["body/overview.html",[0,3.217,11,1.842,16,0.021,26,1.789,31,0.931,42,0.219,43,0.277,56,1.095,66,0.015,67,0.015,97,0.307,98,1.656,184,2.474,189,1.355,194,1.747,197,1.994,199,1.656,202,1.656,204,1.656,206,1.656,208,1.747,210,1.656,212,1.656,214,1.747,216,1.747,218,1.656,220,1.656,222,1.656,224,1.656,226,1.656,229,0.88,252,1.689,254,3.836,284,2.978,285,5.255,286,1.789,287,3.217,288,3.217,289,3.621,290,3.621,291,3.621,292,3.621,293,3.621,294,3.836,295,3.086,296,4.181,297,3.836,298,2.565,299,4.685,300,3.621,301,2.152,1244,3.201,1689,3.217,1724,4.235,1725,4.235,1726,4.235,1727,4.235,1728,4.235]],["title/routes.html",[26,2.081]],["body/routes.html",[16,0.019,26,2.483,66,0.019,67,0.019]],["title/miscellaneous/typealiases.html",[1557,1.761,1729,4.342]],["body/miscellaneous/typealiases.html",[6,0.286,16,0.018,18,0.422,48,3.23,55,1.429,66,0.018,67,0.018,75,0.756,81,1.199,406,2.205,454,2.336,494,4.201,520,3.065,522,3.492,898,4.728,1337,4.728,1557,3.23,1730,5.529,1731,5.529,1732,7.048,1733,5.529,1734,5.529,1735,5.529,1736,5.529,1737,5.529,1738,5.529,1739,5.529]],["title/miscellaneous/variables.html",[1525,3.299,1557,1.761]],["body/miscellaneous/variables.html",[4,0.223,6,0.237,16,0.021,18,0.432,48,3.366,50,1.727,52,1.266,55,1.709,65,3.682,66,0.016,67,0.016,71,1.635,81,1.07,150,1.39,155,2.233,156,2.006,277,3.482,415,2.677,420,4.339,426,2.677,437,4.378,445,3.482,450,4.458,472,4.928,553,3.151,698,2.054,840,3.482,874,3.155,1208,3.482,1214,4.788,1215,3.919,1525,4.378,1526,3.919,1527,3.919,1528,3.919,1529,5.655,1557,2.677,1677,3.919,1687,5.827,1719,3.919,1740,5.762,1741,4.583,1742,4.583,1743,4.583,1744,4.583,1745,4.583,1746,5.762,1747,4.583,1748,4.583,1749,4.583,1750,5.762,1751,6.613,1752,5.762,1753,5.762,1754,5.762,1755,5.762,1756,5.762,1757,5.762,1758,4.583,1759,4.583,1760,4.583,1761,4.583,1762,4.583,1763,4.583]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":563,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["0/3",{"_index":1500,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1244,"title":{"interfaces/UserCard-1.html":{}},"body":{"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1675,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1261,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":995,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1509,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1727,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1501,"title":{},"body":{"coverage.html":{}}}],["100000000000",{"_index":1247,"title":{},"body":{"injectables/UploadService.html":{}}}],["11/11",{"_index":1506,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1728,"title":{},"body":{"overview.html":{}}}],["14/15",{"_index":1507,"title":{},"body":{"coverage.html":{}}}],["14/16",{"_index":1522,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1487,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["153",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":1724,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1517,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1365,"title":{},"body":{"components/UsercardComponent.html":{}}}],["23/23",{"_index":1520,"title":{},"body":{"coverage.html":{}}}],["234.comput",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1277,"title":{},"body":{"interfaces/User.html":{}}}],["28",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1301,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1516,"title":{},"body":{"coverage.html":{}}}],["30/30",{"_index":1524,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":1508,"title":{},"body":{"coverage.html":{}}}],["43/48",{"_index":1514,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1726,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1502,"title":{},"body":{"coverage.html":{}}}],["56/60",{"_index":1505,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1510,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":1725,"title":{},"body":{"overview.html":{}}}],["7/7",{"_index":1511,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":1519,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1518,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1375,"title":{},"body":{"components/UsercardComponent.html":{}}}],["8/8",{"_index":1515,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":1521,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":1513,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":964,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["93",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["abil",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["abov",{"_index":818,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/variables.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1239,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":234,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":697,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["account'",{"_index":822,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":848,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":407,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["accountinfocompon",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1330,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1266,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual",{"_index":522,"title":{},"body":{"classes/Car.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["add",{"_index":617,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"index.html":{}}}],["addcartous",{"_index":540,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addcartouser(intest",{"_index":546,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":241,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/JwtInterceptor.html":{}}}],["address",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["address2",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{},"components/ViewProfileComponent.html":{}}}],["addressid",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["addressselect",{"_index":1163,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["admin.component.css",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["admincompon",{"_index":98,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Register.html":{}}}],["adress",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["affect",{"_index":1082,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["again",{"_index":842,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasybxwxgwzxhyvz9jyn9srhggozi7vcu5g3g",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1240,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["alow",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["amazon",{"_index":1225,"title":{},"body":{"injectables/UploadService.html":{}}}],["amobil",{"_index":696,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1709,"title":{},"body":{"index.html":{}}}],["angular",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/anim",{"_index":976,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":388,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler/src/output/source_map",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":353,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1368,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1377,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":987,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":351,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1313,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1314,"title":{},"body":{"components/UsercardComponent.html":{}}}],["anth",{"_index":1098,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["anyth",{"_index":1083,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["apart",{"_index":767,"title":{},"body":{"components/HowToComponent.html":{}}}],["api",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"directives/PlacesAutocompleteDirective.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":230,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":671,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":675,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":255,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":676,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["app.compon",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":197,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":285,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":375,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["appropri",{"_index":548,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":294,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":909,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["area",{"_index":895,"title":{},"body":{"components/LandingComponent.html":{}}}],["arizona",{"_index":1582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["around",{"_index":1060,"title":{},"body":{"interfaces/Marker.html":{}}}],["array",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1682,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1356,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1393,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1250,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":257,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1696,"title":{},"body":{"index.html":{}}}],["async",{"_index":1129,"title":{},"body":{"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{}}}],["attribut",{"_index":391,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{}}}],["authent",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(email",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":864,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authservic",{"_index":295,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1215,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":1173,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplet",{"_index":1184,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1186,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1161,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:12",{"_index":1176,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:16",{"_index":1167,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:39",{"_index":1172,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":673,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":545,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avatar",{"_index":1390,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1139,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1237,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1153,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1138,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1693,"title":{},"body":{"index.html":{}}}],["back",{"_index":805,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"miscellaneous/typealiases.html":{}}}],["bar",{"_index":819,"title":{},"body":{"components/HowToComponent.html":{}}}],["barebon",{"_index":1200,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["base",{"_index":1193,"title":{},"body":{"components/RideswipeComponent.html":{},"index.html":{}}}],["basic",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["batch",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["batchend",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["batchendchang",{"_index":702,"title":{},"body":{"classes/Filter.html":{}}}],["be",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["bearer",{"_index":865,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1251,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1710,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{}}}],["big",{"_index":823,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":1005,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{}}}],["biographi",{"_index":772,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["blablablabla",{"_index":1006,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["block",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":824,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1113,"title":{},"body":{"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{}}}],["body).topromis",{"_index":1116,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["bootstrap",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":793,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["branch",{"_index":1694,"title":{},"body":{"index.html":{}}}],["brand",{"_index":796,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":834,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":833,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":382,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":310,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":306,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":533,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1224,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1681,"title":{},"body":{"index.html":{}}}],["burden",{"_index":902,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":581,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":590,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":618,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":619,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":620,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":621,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":1049,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"components/UsercardComponent.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canedit",{"_index":1420,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["car",{"_index":200,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["car.id",{"_index":946,"title":{},"body":{"components/LikesComponent.html":{}}}],["car.mak",{"_index":947,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["car.model",{"_index":948,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["car.year",{"_index":949,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["card",{"_index":939,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":999,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.address",{"_index":944,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.firstnam",{"_index":943,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.rol",{"_index":945,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":534,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carmodel",{"_index":535,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carobject",{"_index":536,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":868,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":893,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":199,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":537,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["case",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":636,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":663,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["center",{"_index":1335,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1737,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":966,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["charact",{"_index":1275,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["check",{"_index":693,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["checkifloggedin",{"_index":1148,"title":{},"body":{"components/NavbarComponent.html":{}}}],["checkout",{"_index":1692,"title":{},"body":{"index.html":{}}}],["cheifli",{"_index":508,"title":{},"body":{"classes/Car.html":{},"injectables/UploadService.html":{}}}],["choos",{"_index":789,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":797,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":894,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/Filter.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["clear",{"_index":559,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1674,"title":{},"body":{"index.html":{}}}],["click",{"_index":754,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["client",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["closer",{"_index":841,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":96,"title":{},"body":{"classes/AddressModel.html":{},"index.html":{}}}],["collection/bas",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["colorado",{"_index":1586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":1065,"title":{},"body":{"interfaces/Marker.html":{},"components/UsercardComponent.html":{}}}],["commit",{"_index":1697,"title":{},"body":{"index.html":{}}}],["common",{"_index":1157,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":387,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commun",{"_index":730,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{}}}],["compani",{"_index":565,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1174,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["complex",{"_index":977,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":1133,"title":{},"body":{"components/NavbarComponent.html":{}}}],["compoennt",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":97,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":332,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":336,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["confirmpassword",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ViewProfileComponent.html":{}}}],["conflict",{"_index":1711,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":812,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":669,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":742,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"data2",{"_index":1290,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('befor",{"_index":1264,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":597,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1381,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('error",{"_index":1294,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('geocod",{"_index":740,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":991,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":992,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('nop",{"_index":1484,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["console.log('own",{"_index":611,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('print",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1256,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1255,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":988,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1259,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":990,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":934,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":935,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["console.log(data3.photourl",{"_index":1383,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1117,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(ev",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1257,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(this.carobject.own",{"_index":613,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log(this.currentus",{"_index":884,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1396,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1397,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(userlink",{"_index":1382,"title":{},"body":{"components/UsercardComponent.html":{}}}],["const",{"_index":398,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1348,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(authservic",{"_index":639,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1164,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":916,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["constructor(tokenstorag",{"_index":854,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["contact",{"_index":626,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contact.info",{"_index":951,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["contact.typ",{"_index":950,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["contactinfo",{"_index":622,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":820,"title":{},"body":{"components/HowToComponent.html":{}}}],["content",{"_index":1435,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["context",{"_index":1529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["controller.service.t",{"_index":1037,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:108",{"_index":1079,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:119",{"_index":1106,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:12",{"_index":1040,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:13",{"_index":1076,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:25",{"_index":1043,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:27",{"_index":1092,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:37",{"_index":1048,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:48",{"_index":1087,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:63",{"_index":1100,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:75",{"_index":1104,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:88",{"_index":1109,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:97",{"_index":1085,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{}}}],["core",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1498,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":393,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{}}}],["credenti",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["currentindex",{"_index":1315,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentrol",{"_index":1421,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["currentswipecard",{"_index":1316,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.address",{"_index":1401,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.email",{"_index":1402,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1400,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1403,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":873,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["cuser",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["data",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["data2",{"_index":933,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":940,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.photourl",{"_index":936,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["databas",{"_index":515,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["date",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["date().getfullyear",{"_index":615,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date(sessionstorage.getitem(\"batchend\")).tolocaledatestr",{"_index":1461,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dateformatpip",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["datelocationencrypt",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["day",{"_index":707,"title":{},"body":{"classes/Filter.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["daystartchang",{"_index":703,"title":{},"body":{"classes/Filter.html":{}}}],["dc",{"_index":1573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1274,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1708,"title":{},"body":{"index.html":{}}}],["decid",{"_index":1197,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["declar",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["decor",{"_index":1349,"title":{},"body":{"components/UsercardComponent.html":{}}}],["dedic",{"_index":1222,"title":{},"body":{"injectables/UploadService.html":{}}}],["default",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["degre",{"_index":965,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":918,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":286,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["deseri",{"_index":1093,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":684,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":238,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["determin",{"_index":840,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":652,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["develop",{"_index":1676,"title":{},"body":{"index.html":{}}}],["devic",{"_index":695,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1713,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":346,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1680,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1684,"title":{},"body":{"index.html":{}}}],["discord",{"_index":787,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":836,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":1067,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1077,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":748,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/RideswipeComponent.html":{}}}],["dist",{"_index":1683,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":710,"title":{},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsermatchwebComponent.html":{}}}],["distancechang",{"_index":704,"title":{},"body":{"classes/Filter.html":{}}}],["distinguish",{"_index":682,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1351,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid(\"address\").removeattribute(\"dis",{"_index":1469,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").removeattribute(\"dis",{"_index":1470,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"batchend\").setattribute(\"typ",{"_index":1472,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"confirmpassword\").removeattribute(\"dis",{"_index":1468,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"currentoffice\").style.display",{"_index":1473,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"daystart\").removeattribute(\"dis",{"_index":1471,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"edit\").style.display",{"_index":1476,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"email\").removeattribute(\"dis",{"_index":1466,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"errormessage\").removeattribute(\"hidden",{"_index":1478,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"firstname\").removeattribute(\"dis",{"_index":1464,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"lastname\").removeattribute(\"dis",{"_index":1465,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"password\").removeattribute(\"dis",{"_index":1467,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"profilepic\").setattribute(\"src\",this.currentuser.photourl",{"_index":1147,"title":{},"body":{"components/NavbarComponent.html":{}}}],["document.getelementbyid(\"selectoffice\").style.display",{"_index":1474,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid(\"submit\").style.display",{"_index":1477,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["done",{"_index":790,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["draggabl",{"_index":1057,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":509,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":829,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":832,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":849,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1078,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dropdown",{"_index":394,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["due",{"_index":674,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1287,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1201,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["durrent",{"_index":1432,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["dynam",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["e.g",{"_index":1158,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1720,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":376,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":380,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":379,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":853,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["earli",{"_index":1712,"title":{},"body":{"index.html":{}}}],["earth",{"_index":1008,"title":{},"body":{"interfaces/Location.html":{}}}],["east",{"_index":994,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["east/west",{"_index":1010,"title":{},"body":{"interfaces/Location.html":{}}}],["edit",{"_index":1417,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["effort",{"_index":775,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["element(by.css('app",{"_index":383,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":592,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1165,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1169,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["employe",{"_index":778,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":906,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":911,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"components/ViewProfileComponent.html":{}}}],["enabl",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["encrypt",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":957,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":960,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":262,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":897,"title":{},"body":{"components/LandingComponent.html":{}}}],["enough",{"_index":1090,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["ensur",{"_index":561,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["enter",{"_index":770,"title":{},"body":{"components/HowToComponent.html":{}}}],["entir",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["entri",{"_index":627,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":258,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1558,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environemnt",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":1254,"title":{},"body":{"injectables/UploadService.html":{}}}],["err.error",{"_index":664,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":672,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":233,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":660,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":232,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":666,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":254,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1706,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1296,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"miscellaneous/variables.html":{}}}],["eventemitt",{"_index":1171,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["examin",{"_index":653,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/ViewProfileComponent.html":{}}}],["exampl",{"_index":392,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["execut",{"_index":1717,"title":{},"body":{"index.html":{}}}],["exist",{"_index":747,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["extern",{"_index":1170,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["extra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Marker.html":{}}}],["face",{"_index":967,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":881,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":601,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":698,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":802,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":410,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["favorites.component.css",{"_index":685,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":686,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":202,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":777,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":1096,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["field",{"_index":243,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/ViewProfileComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file.nam",{"_index":1248,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":795,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["filter",{"_index":700,"title":{"classes/Filter.html":{}},"body":{"classes/Filter.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["final",{"_index":798,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":397,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{}}}],["finish",{"_index":800,"title":{},"body":{"components/HowToComponent.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["firstnam",{"_index":1267,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["fit",{"_index":781,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1686,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":958,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":968,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focu",{"_index":1177,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["focus",{"_index":826,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1227,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":743,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["for(var",{"_index":1309,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["forc",{"_index":1140,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":557,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/ViewProfileComponent.html":{}}}],["format",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodul",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["front",{"_index":986,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":401,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":529,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{}}}],["further",{"_index":892,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["ga",{"_index":903,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gener",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["geocod",{"_index":715,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":718,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":711,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":1044,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["geoloc",{"_index":713,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["georgia",{"_index":1595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":1023,"title":{"index.html":{}},"body":{"components/LoginComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getcurrentus",{"_index":1128,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":1068,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1084,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":1038,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":1042,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getfiltereddriv",{"_index":1069,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfiltereddrivers(riderid",{"_index":1086,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getformattedaddress(plac",{"_index":1181,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":1070,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1091,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":1071,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1099,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":1072,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1101,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["getparagraphtext",{"_index":377,"title":{},"body":{"classes/AppPage.html":{}}}],["getregistrationkey",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrol",{"_index":1422,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getrout",{"_index":1039,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":1047,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1228,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1209,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["getus",{"_index":1423,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["getuser(email",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["git",{"_index":1688,"title":{},"body":{"index.html":{}}}],["github",{"_index":1715,"title":{},"body":{"index.html":{}}}],["give",{"_index":810,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":722,"title":{},"body":{"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["go",{"_index":804,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":962,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":779,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":714,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":729,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":735,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":736,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":737,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":724,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":1061,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1185,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1178,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":599,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["grant",{"_index":1190,"title":{},"body":{"interfaces/Register.html":{}}}],["graph",{"_index":1723,"title":{},"body":{"modules.html":{}}}],["group",{"_index":907,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":788,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":384,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":641,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["have",{"_index":1095,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":816,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":847,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["he/sh",{"_index":1434,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["header",{"_index":857,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["height=\"100",{"_index":1489,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["held",{"_index":1449,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["help",{"_index":899,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":690,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":1205,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["hide",{"_index":1326,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1321,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1324,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/ContactInfo.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":756,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1155,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hook",{"_index":1439,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["hopefulli",{"_index":845,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1125,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["hous",{"_index":85,"title":{},"body":{"classes/AddressModel.html":{}}}],["howto",{"_index":404,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":204,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["htmlinputel",{"_index":1175,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":236,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://10.0.0.14:2222",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://e5a3040f.ngrok.io",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1678,"title":{},"body":{"index.html":{}}}],["http://semant",{"_index":937,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":344,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":341,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":657,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":655,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":656,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":647,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://s3.u",{"_index":993,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1739,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ia",{"_index":1603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":1063,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":91,"title":{},"body":{"classes/AddressModel.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["idaho",{"_index":1598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1704,"title":{},"body":{"index.html":{}}}],["identif",{"_index":1062,"title":{},"body":{"interfaces/Marker.html":{}}}],["identifi",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["if(!this.userservice.isloggedin",{"_index":1151,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(document.getelementbyid(\"activest",{"_index":1480,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["if(this.userservice.isloggedin",{"_index":1149,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ignor",{"_index":751,"title":{},"body":{"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["il",{"_index":1600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1221,"title":{},"body":{"injectables/UploadService.html":{},"components/UsercardComponent.html":{}}}],["immedi",{"_index":837,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["incorrect",{"_index":803,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":1054,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":624,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["infowindow",{"_index":1064,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":139,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":1475,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["input",{"_index":759,"title":{},"body":{"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["instanc",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance'",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":665,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1249,"title":{},"body":{"injectables/UploadService.html":{}}}],["instructor",{"_index":766,"title":{},"body":{"components/HowToComponent.html":{}}}],["interact",{"_index":1041,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["intercept",{"_index":638,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":646,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":633,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1297,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":229,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intest",{"_index":550,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["intro",{"_index":870,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":733,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["it'",{"_index":846,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":851,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":395,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["js",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["judgment",{"_index":1298,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":296,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1719,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":1337,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":92,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["know",{"_index":1443,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["ks",{"_index":1605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":1058,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":403,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["landing.component.css",{"_index":871,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":872,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":206,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":764,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["lastnam",{"_index":1268,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["latitud",{"_index":726,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":728,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":1045,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["left",{"_index":1343,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"overview.html":{}}}],["lessen",{"_index":901,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":681,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1299,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":956,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":1073,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1103,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likes.component.css",{"_index":913,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":914,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":208,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":691,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["likesmatchweb.component.css",{"_index":954,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":955,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":210,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["limit",{"_index":1276,"title":{},"body":{"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["line",{"_index":84,"title":{},"body":{"classes/AddressModel.html":{}}}],["link",{"_index":520,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":525,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["list",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["listen",{"_index":1168,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["littl",{"_index":774,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1271,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":132,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1182,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login",{"_index":405,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":213,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["login.component.css",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":212,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1189,"title":{},"body":{"interfaces/Register.html":{}}}],["longitud",{"_index":727,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":809,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1698,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":755,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"injectables/MatchingControllerService.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["manag",{"_index":530,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1142,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":566,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":406,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["map'},{'nam",{"_index":215,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["map(token",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1166,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":297,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mark",{"_index":720,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":1046,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1716,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1112,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1122,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1123,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/filt",{"_index":1115,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1118,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1120,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":298,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":919,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1246,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":625,"title":{},"body":{"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["meant",{"_index":635,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["member",{"_index":908,"title":{},"body":{"components/LandingComponent.html":{}}}],["merg",{"_index":1705,"title":{},"body":{"index.html":{}}}],["messag",{"_index":239,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["meter",{"_index":1203,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["mi",{"_index":1615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1557,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1273,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":683,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":511,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/address.model",{"_index":1359,"title":{},"body":{"components/UsercardComponent.html":{}}}],["models/api",{"_index":659,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":579,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/filt",{"_index":1110,"title":{},"body":{"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["models/link.model",{"_index":929,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["models/role.model",{"_index":928,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/rout",{"_index":1053,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":926,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":580,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["modifi",{"_index":858,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/ViewProfileComponent.html":{}}}],["modul",{"_index":284,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":773,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["move",{"_index":771,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Marker.html":{}}}],["ms",{"_index":1619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["nav",{"_index":1132,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar",{"_index":757,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":217,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["navbar.component.css",{"_index":1126,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1127,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":216,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":378,"title":{},"body":{"classes/AppPage.html":{}}}],["nbsp",{"_index":1493,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["nc",{"_index":1637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":825,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":642,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["network",{"_index":668,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":648,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["next.handle(request",{"_index":866,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":662,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodul",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["nh",{"_index":1629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1405,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":997,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["north/west",{"_index":1009,"title":{},"body":{"interfaces/Location.html":{}}}],["northcarolina",{"_index":1636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":260,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":768,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":259,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["null",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":593,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":594,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":631,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["o",{"_index":1414,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["object",{"_index":553,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["observable.create((observ",{"_index":732,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":739,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":741,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":738,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obtain",{"_index":721,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":637,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["off=\"inact",{"_index":1490,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["offic",{"_index":137,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["office.model",{"_index":1280,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobject",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["officeobjectarray",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["offstyle=\"dang",{"_index":1488,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["oh",{"_index":1641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1695,"title":{},"body":{"index.html":{}}}],["on",{"_index":811,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":769,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["oninit",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ontap",{"_index":272,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1372,"title":{},"body":{"components/UsercardComponent.html":{}}}],["oper",{"_index":554,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":538,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["order",{"_index":815,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":859,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["other",{"_index":898,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1162,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":680,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1689,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":510,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":512,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":571,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["pa",{"_index":1646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1531,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["param",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["params.bucket",{"_index":1262,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1263,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":760,"title":{},"body":{"components/HowToComponent.html":{}}}],["pass",{"_index":1088,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["passeng",{"_index":782,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":830,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":850,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["password).then",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":963,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":399,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":400,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permiss",{"_index":261,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["phone",{"_index":784,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1279,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1269,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1283,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["pin",{"_index":827,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["place",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":1059,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":226,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":794,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":817,"title":{},"body":{"components/HowToComponent.html":{},"components/ViewProfileComponent.html":{}}}],["plu",{"_index":1572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["popul",{"_index":921,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1288,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibl",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{},"classes/Filter.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["post(environment.apiurl",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":780,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1648,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":572,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["previou",{"_index":806,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{}}}],["previous",{"_index":577,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":904,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["problem",{"_index":1691,"title":{},"body":{"index.html":{}}}],["proceed",{"_index":654,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["process",{"_index":761,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1685,"title":{},"body":{"index.html":{}}}],["produc",{"_index":517,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1687,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":225,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["profile.compon",{"_index":363,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1418,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.html",{"_index":1419,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.t",{"_index":1416,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:100",{"_index":1436,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:115",{"_index":1428,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:121",{"_index":1444,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:125",{"_index":1429,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:130",{"_index":1452,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:132",{"_index":1430,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:16",{"_index":1426,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1445,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1446,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:27",{"_index":1451,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":1450,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1442,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1438,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1440,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:38",{"_index":1441,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1448,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1447,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:44",{"_index":1437,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:49",{"_index":1431,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1427,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile.component.ts:83",{"_index":1433,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["profile/view",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["program",{"_index":880,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["promis",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["prop",{"_index":612,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["properli",{"_index":643,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["properti",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":381,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"injectables/TokenStorage.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":687,"title":{},"body":{"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puerto",{"_index":1574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["puertorico",{"_index":1647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1703,"title":{},"body":{"index.html":{}}}],["push",{"_index":1699,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1702,"title":{},"body":{"index.html":{}}}],["put",{"_index":989,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["rc.0",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":808,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":843,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":1721,"title":{},"body":{"index.html":{}}}],["reason",{"_index":744,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":402,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["refer",{"_index":396,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":556,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":541,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":598,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1243,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":569,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{}}}],["registration'},{'nam",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["registration.compon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":531,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":532,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":527,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:109",{"_index":547,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:135",{"_index":555,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:19",{"_index":578,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:25",{"_index":568,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:29",{"_index":564,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:34",{"_index":567,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:39",{"_index":574,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:44",{"_index":575,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:49",{"_index":570,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:52",{"_index":544,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:63",{"_index":551,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":558,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:94",{"_index":560,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1131,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reli",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relic",{"_index":576,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1141,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remov",{"_index":1107,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["repeat",{"_index":839,"title":{},"body":{"components/HowToComponent.html":{}}}],["repo",{"_index":1690,"title":{},"body":{"index.html":{}}}],["repres",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["represent",{"_index":632,"title":{},"body":{"interfaces/ContactInfo.html":{},"injectables/UploadService.html":{}}}],["request",{"_index":237,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"index.html":{}}}],["request.clon",{"_index":862,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requir",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resembl",{"_index":1089,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["reserv",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":542,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":543,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1714,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["respect",{"_index":807,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":235,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["reston",{"_index":1159,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["revatur",{"_index":752,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":716,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":723,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":799,"title":{},"body":{"components/HowToComponent.html":{}}}],["rhodeisland",{"_index":1649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rico",{"_index":1575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":888,"title":{},"body":{"components/LandingComponent.html":{}}}],["rideforc",{"_index":753,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":891,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1081,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":814,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["ridesharecli",{"_index":1673,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":408,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":219,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rideswipe.component.css",{"_index":1194,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1195,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":218,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1345,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":927,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1281,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["rotat",{"_index":970,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":982,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":985,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":983,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":1052,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["routerlink",{"_index":390,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":389,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":386,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":1677,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1234,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1223,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":996,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":905,"title":{},"body":{"components/LandingComponent.html":{}}}],["save",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"injectables/TokenStorage.html":{},"components/ViewProfileComponent.html":{}}}],["savetoken",{"_index":1210,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1212,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1652,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1679,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1371,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1374,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scroll",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1238,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":89,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1241,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":762,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":694,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{}}}],["select",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["send",{"_index":549,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["server",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["services/api/map",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["services/auth.servic",{"_index":661,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["servier",{"_index":644,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/MatchingControllerService.html":{}}}],["session",{"_index":874,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["sessioncheck",{"_index":875,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorag",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.clear",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.getitem(\"address",{"_index":1460,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"firstnam",{"_index":1454,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"lastnam",{"_index":1456,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(\"useremail",{"_index":1458,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem('rol",{"_index":1483,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1217,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":886,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.setitem('act",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('batchend",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('id",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('rol",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('useremail",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"components/ViewProfileComponent.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1216,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sethead",{"_index":863,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["seven",{"_index":783,"title":{},"body":{"components/HowToComponent.html":{}}}],["show",{"_index":828,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":838,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":667,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":889,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signal",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simpli",{"_index":689,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{}}}],["site",{"_index":869,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":786,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":785,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1293,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1651,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1653,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec.t",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec\\.t",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":256,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":628,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1707,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":385,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":281,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:17",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:19",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:21",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:23",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:26",{"_index":126,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:35",{"_index":144,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:40",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:50",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:61",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":526,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":679,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:12",{"_index":688,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:20",{"_index":692,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":745,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":867,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:16",{"_index":879,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:18",{"_index":876,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:29",{"_index":877,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:48",{"_index":878,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":912,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":917,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:34",{"_index":923,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":920,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":953,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:104",{"_index":969,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:115",{"_index":961,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":959,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:57",{"_index":972,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":971,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:20",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:43",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:59",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1512,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1124,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1146,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:22",{"_index":1130,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1143,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:60",{"_index":1144,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:70",{"_index":1136,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:98",{"_index":1137,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1192,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:12",{"_index":1198,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:22",{"_index":1196,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1310,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:122",{"_index":1325,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:133",{"_index":1329,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:164",{"_index":1332,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:188",{"_index":1333,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:37",{"_index":1347,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:39",{"_index":1355,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:45",{"_index":1341,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:47",{"_index":1340,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:49",{"_index":1336,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:51",{"_index":1339,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:53",{"_index":1357,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:56",{"_index":1353,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:58",{"_index":1323,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:68",{"_index":1342,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:73",{"_index":1327,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1282,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:104",{"_index":1411,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:143",{"_index":1410,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:155",{"_index":1408,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:163",{"_index":1409,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:40",{"_index":1407,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:50",{"_index":1413,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:55",{"_index":1412,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1415,"title":{},"body":{"components/ViewProfileComponent.html":{},"coverage.html":{}}}],["src/app/directives/plac",{"_index":1160,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:10",{"_index":93,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:12",{"_index":94,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:14",{"_index":95,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":90,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:8",{"_index":88,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":231,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":507,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:13",{"_index":521,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":516,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:17",{"_index":519,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:19",{"_index":523,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:9",{"_index":514,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":623,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/filter.t",{"_index":701,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/models/filter.ts:10",{"_index":709,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:6",{"_index":705,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:8",{"_index":706,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/interest.model.t",{"_index":1567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":1007,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":1056,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1156,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1188,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1199,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1204,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:6",{"_index":1206,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:8",{"_index":1207,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1265,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":1036,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":1066,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1523,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:101",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:40",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/geocode.service.t",{"_index":712,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":717,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:29",{"_index":725,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:51",{"_index":719,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1219,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:13",{"_index":1235,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:15",{"_index":1230,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:26",{"_index":1231,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:42",{"_index":1233,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":634,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":640,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:33",{"_index":649,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":852,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":855,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:28",{"_index":856,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1208,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:20",{"_index":1213,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:28",{"_index":1211,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":708,"title":{"index.html":{}},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":984,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1361,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":980,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1363,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1370,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1366,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1373,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1499,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":240,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["step",{"_index":651,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["stick",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["storag",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1236,"title":{},"body":{"injectables/UploadService.html":{},"index.html":{}}}],["street",{"_index":87,"title":{},"body":{"classes/AddressModel.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":591,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":925,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":973,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["sub",{"_index":1135,"title":{},"body":{"components/NavbarComponent.html":{}}}],["submit",{"_index":616,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["submitchang",{"_index":1424,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["success",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":813,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":242,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":528,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":552,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1722,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":922,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":1292,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1328,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1317,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1352,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":915,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1318,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1319,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":924,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1344,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1354,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1346,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":1134,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["switchrol",{"_index":1425,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["system",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":573,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":650,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["tennesse",{"_index":1655,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["texa",{"_index":1657,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["th",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1738,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["there'",{"_index":1404,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1406,"title":{},"body":{"components/UsercardComponent.html":{}}}],["think",{"_index":835,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.address2",{"_index":1459,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1187,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1391,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1389,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.authenticator(email",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":677,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.car",{"_index":583,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":604,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":606,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":582,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":602,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":603,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":605,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":607,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":608,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":585,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":595,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":609,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.currentindex",{"_index":1399,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentrol",{"_index":1479,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.currentswipecard",{"_index":1385,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":883,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.datelocationencrypt",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.el",{"_index":1179,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.elref.nativeel",{"_index":1180,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.firstnam",{"_index":1453,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.fold",{"_index":1245,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":731,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":734,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.getrol",{"_index":1463,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1253,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.getus",{"_index":1462,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.http",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1121,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":1055,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1111,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.post(environment.apiurl",{"_index":1114,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1119,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isloggedin",{"_index":1150,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.lastnam",{"_index":1455,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.likecards.push(card",{"_index":998,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1183,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1307,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":932,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1289,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1305,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1303,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1306,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.registrationkey",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.resetus",{"_index":586,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":1154,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate(['/land",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.url",{"_index":1152,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":887,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":885,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.swipe_action.left",{"_index":1395,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1331,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1387,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1388,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1384,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":942,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1398,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1386,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1394,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1392,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":861,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1260,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1486,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.usernam",{"_index":1457,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userobject",{"_index":600,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":610,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":588,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1291,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1308,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1302,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1304,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":614,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":589,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{},"components/ViewProfileComponent.html":{}}}],["this.userservice.getallusers().subscribe((x",{"_index":1485,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":930,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":596,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":882,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).subscrib",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update().subscrib",{"_index":1481,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["those",{"_index":1278,"title":{},"body":{"interfaces/User.html":{}}}],["thrash",{"_index":1568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":792,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":658,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":678,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":670,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":801,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1334,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1322,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1320,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1358,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":1051,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["titl",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1656,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["to.compon",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":749,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":750,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":746,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["tobase64str",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["today",{"_index":890,"title":{},"body":{"components/LandingComponent.html":{}}}],["token",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["token.storag",{"_index":860,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1214,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":418,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["topromis",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1202,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["tpye",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1338,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":1191,"title":{},"body":{"interfaces/Register.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":981,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":974,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1376,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1378,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1364,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1362,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1367,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1300,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1050,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["trigger",{"_index":975,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":979,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1369,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1360,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":821,"title":{},"body":{"components/HowToComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1658,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1729,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1700,"title":{},"body":{"index.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":938,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":263,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":584,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["under",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":758,"title":{},"body":{"components/HowToComponent.html":{}}}],["underth",{"_index":952,"title":{},"body":{"components/LikesComponent.html":{}}}],["undislikedriv",{"_index":1074,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1105,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1571,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["unknown",{"_index":978,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1080,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1075,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1108,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unus",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["up",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["updat",{"_index":1145,"title":{},"body":{"components/NavbarComponent.html":{},"components/ViewProfileComponent.html":{}}}],["upload",{"_index":1220,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1229,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1232,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1218,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1252,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1258,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1097,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"classes/Car.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'",{"_index":629,"title":{},"body":{"interfaces/ContactInfo.html":{},"classes/Filter.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/ViewProfileComponent.html":{}}}],["user.email",{"_index":1495,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.firstnam",{"_index":1492,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.id",{"_index":1491,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.lastnam",{"_index":1494,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.model",{"_index":524,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.rol",{"_index":1496,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["user.user.address",{"_index":1003,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":1004,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":1002,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":1000,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":1001,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1497,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["usercard",{"_index":409,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":221,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usercard.component.css",{"_index":1311,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1312,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":220,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["userid",{"_index":587,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":931,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1284,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":223,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["usermatchweb.component.css",{"_index":1286,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1285,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":222,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":765,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["username/phon",{"_index":630,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":539,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["users/{userid",{"_index":1102,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["ut",{"_index":1660,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1659,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["utils/error.interceptor",{"_index":356,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1664,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valu",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["variabl",{"_index":1525,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":763,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":518,"title":{},"body":{"classes/Car.html":{},"components/HowToComponent.html":{}}}],["venmo",{"_index":1270,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1295,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["vermont",{"_index":1661,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["via",{"_index":1718,"title":{},"body":{"index.html":{}}}],["view",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["viewchild",{"_index":1350,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1380,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1379,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":224,"title":{"components/ViewProfileComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1663,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":941,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["void",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["vt",{"_index":1662,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1666,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/LandingComponent.html":{}}}],["washington",{"_index":1665,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":900,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["we'r",{"_index":645,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["web",{"_index":1226,"title":{},"body":{"injectables/UploadService.html":{}}}],["westvirginia",{"_index":1667,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whater",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["whichev",{"_index":844,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1670,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.reload(tru",{"_index":1482,"title":{},"body":{"components/ViewProfileComponent.html":{}}}],["window.screen.width",{"_index":699,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1669,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":831,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":791,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1094,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":562,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"components/ViewProfileComponent.html":{}}}],["wv",{"_index":1668,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1672,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1671,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{},"components/UsermatchwebComponent.html":{},"components/ViewProfileComponent.html":{}}}],["x.active.tostr",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["year",{"_index":513,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/ViewProfileComponent.html":{}}}],["you'r",{"_index":896,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1701,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":910,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":776,"title":{},"body":{"components/HowToComponent.html":{}}}],["ype",{"_index":1566,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyi",{"_index":1272,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":299,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1242,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents possible adress of Users of the system \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n                \n                    \n                        First line of the address (house number, Street name) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:8\n                            \n                        \n\n                \n                    \n                        Second line of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n                \n                    \n                        The id (and possible key) of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        THe City of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:12\n                            \n                        \n\n                \n                    \n                        The State the address is in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:14\n                            \n                        \n\n                \n                    \n                        Represents the zip-code \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    /** The id (and possible key) of the address */\n    addressID: number;\n    /** First line of the address (house number, Street name) */\n    address: string;\n    /** Second line of the address */\n    address2?: string;\n    /** THe City of the address */\n    city: string;\n    /** The State the address is in */\n    state: string;\n    /** Represents the zip-code */\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:50\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:21\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:26\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:23\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { toBase64String } from '@angular/compiler/src/output/source_map';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                                {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an error that accompanied the response to an HTTP request\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Serves as the root component for the entire page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            Log any tap that the system detects \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        Confirms the user password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        Provides a password for the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Provides a basic title \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n\n/**\n * Serves as the root component for the entire page\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /** Provides a basic title */\n  title = 'app';\n  /** Provides a password for the user */\n  password: string;\n  /** Confirms the user password */\n  confirmPassword: string;\n\n  /** Log any tap that the system detects */\n  onTap(event) {\n    console.log(event);\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Serves as the collection/base for the entire Angular Project\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n/**\n * Serves as the collection/base for the entire Angular Project\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBXWXgWzxhyvz9JyN9SrHgGOzi7VcU5G3g',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows Users to authenticate themselves with the server\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the Authentication service with the required dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nOur http client dependency for making http requests\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used to grab any user information from the API\n\n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to save our generated token locally\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in and if successful, sets the sessionStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe user identifier\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe password of the account\n\n\n                                                        \n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(TESTING) whether to use the promise version or stick with observable\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nUser mapped to token storage now\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Logs the user out of the service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n/**\n * Allows Users to authenticate themselves with the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * Sets up the Authentication service with the required dependencies\n   * @param {HttpClient} http - Our http client dependency for making http requests\n   * @param {UserControllerService} userService - Service used to grab any user information from the API\n   * @param {TokenStorage} tokenStorage - Used to save our generated token locally\n   * @param {Router} route - enables navigation between components (does not appear to be used)\n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage /*,\n    private route: Router*/\n  ) { }\n\n  /**\n   * Attempts to log the user in\n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API\n   * @returns {null} - User mapped to token storage now\n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n        })\n      ).toPromise();\n  }\n\n  /**\n   * Attempts to log the user in and if successful, sets the sessionStorage\n   * @param email - the user identifier\n   * @param password - the password of the account\n   * @param {boolean} usePromise - (TESTING) whether to use the promise version or stick with observable\n   */\n  authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('active', x.active.toString());\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n        });\n        location.reload(true);\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = 'Server unavailable';\n            } else {\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n  /**\n   * Logs the user out of the service\n   */\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the Car a User (cheifly a Driver) owns \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:9\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n                \n                    \n                        The Producer of the Vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:17\n                            \n                        \n\n                \n                    \n                        THe model of the vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n                \n                    \n                        The owner of this car. Represents the URL mapping to the actual user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:19\n                            \n                        \n\n                \n                    \n                        THe year the car was produced \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\nimport { Link } from './link.model';\n\n/** Represents the Car a User (cheifly a Driver) owns */\nexport class Car {\n  /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car. Represents the URL mapping to the actual user\n   */\n  owner: Link;\n  /** The Producer of the Vehicle */\n  make: string;\n  /** THe model of the vehicle */\n  model: string;\n  /** THe year the car was produced */\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser(inTesting?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:109\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inTesting\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:29\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:34\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:25\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:49\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:39\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:44\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:19\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      // console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      // console.log('Car reg: Failed to get user: ');\n      // console.log(e);\n    });\n\n  }\n \n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser(inTesting?: boolean) {\n\n    if (!inTesting) {\n      this.resetUser();\n    }\n\n    this.carObject.id = 0;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id;\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    console.log('Owner prop (car reg):');\n    console.log(this.carObject.owner);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Holds a means of contacting a user \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represente the type of contact info available \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    /** Represente the type of contact info available */\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Meant to catch any error occuring in an HTTP request\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            Sets up our HTTP error handling with the services needed to handle them properly\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows us to log out if the servier says we're not logged on\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nenables component routing\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:33\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to examine\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with out HTTP request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n/**\n * Meant to catch any error occuring in an HTTP request\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  /**\n   * Sets up our HTTP error handling with the services needed to handle them properly\n   * @param {AuthService} authService - allows us to log out if the servier says we're not logged on\n   * @param {Router} router - enables component routing\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n   * @param request - the HTTP request to examine\n   * @param next - the means of proceeding with out HTTP request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                            Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  /**\n   * Simply sets up the Favorites component. Dependencies are not used here but are used in the likes and likesmatchweb component\n   */\n  constructor() { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/filter.ts\n        \n\n            \n                Description\n            \n            \n                Provides a list of possible filters set up for the matching service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEndChange\n                            \n                            \n                                dayStartChange\n                            \n                            \n                                distanceChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEndChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEndChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:6\n                            \n                        \n\n                \n                    \n                        Filter by the user's batch end date \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayStartChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dayStartChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:8\n                            \n                        \n\n                \n                    \n                        Filter by the day the user started \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            distanceChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distanceChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:10\n                            \n                        \n\n                \n                    \n                        Filter by the distance between the users \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Filter {\n    /** Filter by the user's batch end date */\n    batchEndChange: boolean;\n    /** Filter by the day the user started */\n    dayStartChange: boolean;\n    /** Filter by the distance between the users */\n    distanceChange: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides Specific geolocation services from Google maps\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the Service with a Google Maps object\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using an address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe address of a location to obtain information about\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using a latitude and longitude value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe location to set up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                        Enables communication with Google Map services\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Provides Specific geolocation services from Google maps\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  /**\n   * Enables communication with Google Map services\n   */\n  geocoder: google.maps.Geocoder;\n\n  /**\n   * Sets up the Service with a Google Maps object\n   */\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  /**\n   * Attempts to mark a location using a latitude and longitude value\n   * @param {google.maps.LatLng} latLng - the location to set up\n   * @returns {Observable} - information about your given location\n   */\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Attempts to mark a location using an address\n   * @param address - the address of a location to obtain information about\n   * @returns {Observable} - information about your given location\n   */\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Ensures that each HTTP request we send has our authentication token\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up our interceptor for token addition\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to access our authentication token\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:28\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests and adds the authentication token to its header\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to modify\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with the original request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n/**\n * Ensures that each HTTP request we send has our authentication token\n */\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  /**\n   * Sets up our interceptor for token addition\n   * @param tokenStorage - the Service that allows us to access our authentication token\n   */\n  constructor(private tokenStorage: TokenStorage) {}\n\n  /**\n   * Catches HTTP requests and adds the authentication token to its header\n   * @param {HttpRequest} request - the HTTP request to modify\n   * @param {HttpHandler} next - the means of proceeding with the original request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:16\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:18\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   */\n  constructor(private userService: UserControllerService) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  //   this.userService.getCurrentUserObservable().subscribe(\n  //   data => {\n  //     this.currentUser = data;\n  //     console.log(this.currentUser)\n  //   }\n  // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Get\n            Started\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n      \n      RideForce\n      Looking for a ride? Sign up today to be a driver or a rider\n      Get\n          Started\n\n      \n        For more information,\n        click here\n      \n     -->\n\n\n      \n\n          Need a ride? Look no further than RideForce!\n          Use the App to find drivers to carpool in your\n          circle or area!\n\n\n       -->\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Get            Started        Browse                  For more information,          click here                          RideForce      Looking for a ride? Sign up today to be a driver or a rider      Get          Started              For more information,        click here           -->                Need a ride? Look no further than RideForce!          Use the App to find drivers to carpool in your          circle or area!       -->                                  Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:34\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          {{card.user.address}}\n          Role: {{card.user.role}}\n          \n            user has a car\n              {{car.id}}\n              Make: {{car.make}}\n              Model: {{car.model}}\n              Year: {{car.year}}\n          \n          {{contact.type}}: {{contact.info}}\n          underthings\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          {{card.user.address}}          Role: {{card.user.role}}                      user has a car              {{car.id}}              Make: {{car.make}}              Model: {{car.model}}              Year: {{car.year}}                    {{contact.type}}: {{contact.info}}          underthings          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd | date}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd | date}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a specific location on Earth \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the North/West value of the location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The East/West value of the location \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    /** the North/West value of the location */\n    latitude: number;\n    /** The East/West value of the location */\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(Unused) Provides cUser Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields.\nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   * @param {UserControllerService} userService - (Unused) Provides cUser Functionality\n   */\n  constructor(private authService: AuthService, private route: Router, private userService: UserControllerService) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n\n  // getUser(email: string) {\n  //   let user;\n  //   return this.userService.getUserByEmail(email).subscribe();\n  // }\n\n  /**\n   * Gets the parameters from the login fields.\n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables Components to work with the Mapping Service on the backend\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:12\n                            \n                        \n\n                \n                    \n                            Sets up the mapping service to interact with the server\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the Means of communicating with the Server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nLocation info with latitude and longitude information\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe Route info generated by the system\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n/**\n * Enables Components to work with the Mapping Service on the backend\n */\n@Injectable()\nexport class MapsControllerService {\n\n  /**\n   * Sets up the mapping service to interact with the server\n   * @param {HttpClient} http - provides the Means of communicating with the Server\n   */\n public constructor(private http: HttpClient) { }\n\n  /**\n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  * @returns {Observable} - Location info with latitude and longitude information\n  */\n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * @param start string address\n   * @param end string address\n   * @returns {Observable} - the Route info generated by the system\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object that could appear on a map \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The address the marker represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can it move around \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any Identifier a User might use \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the actual location on the map \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra identification for the marker \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Does it represent any specific user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    /** the actual location on the map */\n    location: google.maps.LatLngLiteral;\n    /** The address the marker represents */\n    address?: string;\n    /** Any Identifier a User might use */\n    label?: string;\n    /** Does it represent any specific user */\n    userId?: number;\n    /** Can it move around */\n    draggable?: boolean;\n    /** Extra identification for the marker */\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages User's interactions with other users on Rideshare\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFilteredDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:13\n                            \n                        \n\n                \n                    \n                            Sets up the Service with an HTTPClient injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the means of interacting with the HTTP servier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:108\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers the user disliked\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFilteredDrivers(riderId: number, filter: Filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns Users who have passed the given filter and resemble the User enough to be returned\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Filter\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe specific filters to add to the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \nthe list of Users that pass the filter specifications\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe mapping to a specific user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nanthing that might be returned\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of Users the User 'liked'\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe id of the rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers that \"match\" the user\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now likes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now dislikes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\nimport { Filter } from '../../models/filter';\n\n/**\n * Manages User's interactions with other users on Rideshare\n */\n@Injectable()\nexport class MatchingControllerService {\n\n  /**\n   * Sets up the Service with an HTTPClient injection\n   * @param http - provides the means of interacting with the HTTP servier\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param {Link} uri - the mapping to a specific user\n   * @returns {Observable} - anthing that might be returned\n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   *\n   * @param {number} riderId - the id of the rider making the request\n   * @returns {Observable[]>} - the list of drivers that \"match\" the user\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n\n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns Users who have passed the given filter and resemble the User enough to be returned\n   * @param riderId - the rider making the request\n   * @param filter - the specific filters to add to the request\n   * @returns {Promise} - the list of Users that pass the filter specifications\n   */\n  getFilteredDrivers(riderId: number, filter: Filter): Promise {\n    const body = {\n      filter,\n      riderId\n    };\n    return this.http.post(environment.apiUrl + `matches/filtered`, body).toPromise();\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   *\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - list of Users the User 'liked'\n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now likes\n   * @returns {Observable} - Does not actually return anything\n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n\n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now dislikes\n   * @returns {Observable} - Does not actually return anything\n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - the list of drivers the user disliked\n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \n(unused, should be used by Login component) Enables component to authenticate user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Updates the status of our session ( is the user currently logged on?)\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     \n\n                    \n                \n                    \n                        \n                            Default value : sessionStorage.length > 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:22\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session = sessionStorage.length > 0;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {UserControllerService} userService - allows User Services to be utilized\n   * @param {AuthService} authService - (unused, should be used by Login component) Enables component to authenticate user\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    // this.userService.getCurrentUserObservable().subscribe(\n    //   data => {\n    //     this.currentUser = data;\n    //     // console.log(this.currentUser);\n    //     document.getElementById(\"profilePic\").setAttribute(\"src\",this.currentUser.photoUrl);\n    //   }\n    // );\n    this.sessionCheck();\n  }\n\n\n  /**\n   * Updates the status of our session ( is the user currently logged on?)\n   */\n  sessionCheck() {\n    if (sessionStorage.length > 0) {\n      this.session = true;\n    } else {\n      this.session = false;\n    }\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n  // checkIfLoggedIn(){\n  //   if(this.userService.isLoggedIn){\n  //     this.isLoggedIn = true;\n  //   } \n  //   else if(!this.userService.isLoggedIn) {\n  //     this.isLoggedIn = false;\n  //   }\n  // }\n\n  // getCurrentUser(){\n  //   this.userService.getCurrentUser().subscribe(\n  //     data => {\n  //       this.currentUser = data;\n  //     }\n  //   )\n  // }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the \"log in\" button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === \"/landing\") {\n      location.reload(true);\n    } else {\n      await this.route.navigate([\"/landing\"]);\n      location.reload(true);\n    }\n  }\n}\n\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    \n        \n          \n        \n        \n          About\n          User Settings\n        \n      \n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Logout\n      \n  \n  \n      \n        \n      \n      \n      \n        About\n        User Settings\n      \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                                                              About          User Settings                                Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Logout                                                  About        User Settings          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents Offices a User might hold \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Where the office is located \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n\n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  /** Where the office is located */\n  address: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n            \n                Description\n            \n            \n                Adds functionality to an HTML input element \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:16\n                            \n                        \n\n                \n                    \n                            Sets up the listener with dependency injections\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe element to listen to\n\n\n                                                        \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe external api for mapping services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        Manages data for when the user changes the place \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Sets up the Event listener so that auto-complete is possible\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:12\n                            \n                        \n\n                \n                    \n                        The Input element to focus on \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n/** Adds functionality to an HTML input element */\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  /** The Input element to focus on */\n  private element: HTMLInputElement;\n\n  /** Manages data for when the user changes the place */\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Sets up the listener with dependency injections\n   * @param {ElementRef} elRef - the element to listen to\n   * @param {MapsAPILoader} mapsAPILoader - the external api for mapping services\n   */\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = this.elRef.nativeElement;\n  }\n\n  /**\n   * @ignore\n   * @param place\n   */\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  /**\n   * Sets up the Event listener so that auto-complete is possible\n   */\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the object the Account Info component would use when creating a new user in the system \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe password of the new user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The long token granted by an administrator (or trainer) to allow new User registration \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User name of the new user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  /** The User name of the new user */\n  username: string;\n  /** THe password of the new user */\n  password: string;\n  /** The long token granted by an administrator (or trainer) to allow new User registration */\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the two components for user matching and selects which to display based on whether view is desktop or mobile \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            Decides whether to set the view to mobile or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:12\n                            \n                        \n\n                \n                    \n                        Whether the view is mobile (Desktop is the default) \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Holds the two components for user matching and selects which to display based on whether view is desktop or mobile */\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  /** Whether the view is mobile (Desktop is the default) */\n  public mobile = false;\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Decides whether to set the view to mobile or not\n   */\n  ngOnInit() {\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Provides the barebones information about a given route \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a User object that could be hidden in an HTML list \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:6\n                            \n                        \n\n                \n                    \n                        The Given User \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:8\n                            \n                        \n\n                \n                    \n                        Is is visible or hidden? \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\n/** Represents a User object that could be hidden in an HTML list */\nexport class SwipecardModel {\n    /** The Given User */\n    user: User;\n    /** Is is visible or hidden? */\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n            \n                Description\n            \n            \n                Provides basic methods for accessing the session token \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:28\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current authentication token being used\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nthe authentication token of the current session\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:20\n                            \n                        \n\n\n                \n                    \n                            Saves the provided authentication token to the session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe authentication token to save\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Used to access the Authentication token in our session storage */\nconst TOKEN_KEY = 'authToken';\n\n/** Provides basic methods for accessing the session token */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Saves the provided authentication token to the session\n   * @param {string} token - the authentication token to save\n   */\n  public saveToken(token: string) {\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Retrieves the current authentication token being used\n   * @returns {string} - the authentication token of the current session\n   */\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                            Basic set up of the Service - it uses no dependency injection\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe S3 representation to utillize\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Attempts to actually upload a file to the S3 Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe file to upload to the S3 service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe url used for the file\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:13\n                            \n                        \n\n                \n                    \n                        The Root folder name used by this system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                        Holds the url where the image will be stored\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n/**\n * Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  /** The Root folder name used by this system */\n  FOLDER = 'rydeforce-s3/';\n  /** Holds the url where the image will be stored*/\n  url: any;\n\n  /**\n   * Basic set up of the Service - it uses no dependency injection\n   */\n  constructor() { }\n\n  /**\n   * Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n   * @returns {S3} - the S3 representation to utillize\n   */\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  }\n\n  /**\n   * Attempts to actually upload a file to the S3 Service\n   * @param file - the file to upload to the S3 service\n   * @returns {string} - the url used for the file\n   */\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    const upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        bio\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        password\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's about me that has a character limit of 255\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cars the User might own (holds the URL mapping to those cars) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  /** The first name of a user */\n  firstName: string;\n  /** The last name of a user */\n  lastName: string;\n  /** The username of a user */\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  password: string;\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  /**\n   *  The user's about me that has a character limit of 255\n   */\n  bio: string;\n  /** List of cars the User might own (holds the URL mapping to those cars) */\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: boolean;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User selection item in the html page \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the given user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to profile picture of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User being represented \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  filter() {\n    for(var i = 0; i \n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:122\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:164\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:188\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:49\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:51\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:47\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:45\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:68\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:37\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:58\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:56\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:39\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:53\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { AddressModel } from '../../models/address.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Role } from '../../models/role.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n    constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        console.log(data3.photoUrl);\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                    Address: {{currentSwipeCard.user.address}}\n                    Email: {{currentSwipeCard.user.email}}\n                    \n                    see comment\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    {{contact.type}}: {{contact.info}}\n                    \n                        \n                            Car info:\n                            {{car.make}}, {{car.model}}, {{car.year}}\n                        \n                    \n                    \n                    RIDER\n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                         Address: {{currentSwipeCard.user.address}}                    Email: {{currentSwipeCard.user.email}}                                        see comment                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                        {{contact.type}}: {{contact.info}}                                                                        Car info:                            {{car.make}}, {{car.model}}, {{car.year}}                                                                                    RIDER                                                    There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                filter\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:163\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:143\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:50\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Role } from '../../models/role.model';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(private matchService: MatchingControllerService, private userService: UserControllerService) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  filter() {\n    for(var i = 0; i \n    \n\n    \n        \n  \n    \n      Filter \n    \n    \n    \n       Batch End Date \n       Day Start Time \n       Distance \n      Submit\n    \n  \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                X -->\n                \n                \n                \n                O -->\n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd}}\n              User bio blablablabla\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter                    Batch End Date        Day Start Time        Distance       Submit        Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                              X -->                                                                O -->                                                                                         {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd}}              User bio blablablabla                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewProfileComponent.html":{"url":"components/ViewProfileComponent.html","title":"component - ViewProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ViewProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/view-profile/view-profile.component.ts\n\n\n    \n        Description\n    \n    \n        Represents the page that allows users to view (and edit) their profile\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-view-profile\n            \n\n            \n                styleUrls\n                view-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./view-profile.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                address2\n                            \n                            \n                                batchEnd\n                            \n                            \n                                canEdit\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                currentRole\n                            \n                            \n                                currentUser\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRole\n                            \n                            \n                                getUsers\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submitChanges\n                            \n                            \n                                switchRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n                \n                    \n                            Sets up the component with the User Service injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows the component to work with the user service (for updating)\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                            \n                        \n                    \n                \n                \n                    \nedit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            Allows the form to be edited\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Gets the list of offices from the database\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRole\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:125\n                            \n                        \n\n\n                \n                    \n                            Sets up the User's current role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:132\n                            \n                        \n\n\n                \n                    \n                            Sets up all users in the system \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Sets up the form with data about the durrent user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nsubmitChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:83\n                            \n                        \n\n\n                \n                    \n                            Updates the user once he/she is content with the updates\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            switchRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nswitchRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            Enables limited ability to modify the User's role in the system\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:44\n                            \n                        \n\n                \n                    \n                        User's active state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                        The address of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:35\n                            \n                        \n\n                \n                    \n                        The day the User's batch ends\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        canEdit:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:38\n                            \n                        \n\n                \n                    \n                        Whether the user can make changes (Currently not used) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:31\n                            \n                        \n\n                \n                    \n                        The password of the user, used to confirm User knows the password (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentRole:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:121\n                            \n                        \n\n                \n                    \n                        The current role of the logged on user in string form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:16\n                            \n                        \n\n                \n                    \n                        The User being selected \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:23\n                            \n                        \n\n                \n                    \n                        The first name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:25\n                            \n                        \n\n                \n                    \n                        The last name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     Office\n\n                    \n                \n                    \n                        \n                            Type :     Office\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:42\n                            \n                        \n\n                \n                    \n                        Current office being examined \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:40\n                            \n                        \n\n                \n                    \n                        List of offices held by the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:29\n                            \n                        \n\n                \n                    \n                        The password of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:27\n                            \n                        \n\n                \n                    \n                        The user name of the user (hooked to form item in html) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/view-profile/view-profile.component.ts:130\n                            \n                        \n\n                \n                    \n                        Holds the list of all users in the system \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\nimport { Office } from '../../models/office.model';\n\n/**\n * Represents the page that allows users to view (and edit) their profile\n */\n@Component({\n  selector: 'app-view-profile',\n  templateUrl: './view-profile.component.html',\n  styleUrls: ['./view-profile.component.css']\n})\nexport class ViewProfileComponent implements OnInit {\n  /** The User being selected */\n  currentUser: User;\n  /**\n   * Sets up the component with the User Service injected\n   * @param userService - Allows the component to work with the user service (for updating)\n   */\n  constructor(private userService: UserControllerService) { }\n  /** The first name of the user (hooked to form item in html) */\n  firstName: string;\n  /** The last name of the user (hooked to form item in html) */\n  lastName: string;\n  /** The user name of the user (hooked to form item in html) */\n  username: string;\n  /** The password of the user (hooked to form item in html) */\n  password: string;\n  /** The password of the user, used to confirm User knows the password (hooked to form item in html) */\n  confirmPassword: string;\n  /** The address of the user (hooked to form item in html) */\n  address2: string;\n  /** The day the User's batch ends*/\n  batchEnd: any;\n\n  /** Whether the user can make changes (Currently not used) */\n  canEdit = false;\n  /** List of offices held by the user */\n  officeObjectArray: Office[] = [];\n  /** Current office being examined */\n  officeObject: Office;\n  /** User's active state */\n  active: string;\n\n   /**\n   * Sets up the form with data about the durrent user\n   */\n  ngOnInit() {\n    this.firstName = sessionStorage.getItem(\"firstName\");\n    this.lastName = sessionStorage.getItem(\"lastName\");\n    this.username = sessionStorage.getItem(\"userEmail\");\n    this.address2 = sessionStorage.getItem(\"address\");\n    this.batchEnd = new Date(sessionStorage.getItem(\"batchEnd\")).toLocaleDateString();\n    this.getOffices();\n    this.getUsers();\n    this.getRole();\n  }\n\n  /**\n   * Allows the form to be edited\n   */\n  edit() {\n    document.getElementById(\"firstName\").removeAttribute(\"disabled\");\n    document.getElementById(\"lastName\").removeAttribute(\"disabled\");\n    document.getElementById(\"email\").removeAttribute(\"disabled\");\n    document.getElementById(\"password\").removeAttribute(\"disabled\");\n    document.getElementById(\"confirmPassword\").removeAttribute(\"disabled\");\n    document.getElementById(\"address\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").removeAttribute(\"disabled\");\n    document.getElementById(\"dayStart\").removeAttribute(\"disabled\");\n    document.getElementById(\"batchEnd\").setAttribute(\"type\", \"date\");\n    document.getElementById(\"currentOffice\").style.display = \"none\";\n    document.getElementById(\"selectOffice\").style.display = \"inline\";\n    document.getElementById(\"edit\").style.display = \"none\";\n    document.getElementById(\"submit\").style.display = \"inline\";\n    document.getElementById(\"errorMessage\").removeAttribute(\"hidden\");\n  }\n\n  /**\n   * Updates the user once he/she is content with the updates\n   */\n  submitChanges() {\n\n    sessionStorage.setItem('firstName', this.firstName);\n    sessionStorage.setItem('lastName', this.lastName);\n    sessionStorage.setItem('userEmail', this.username);\n    sessionStorage.setItem('address', this.address2);\n    sessionStorage.setItem('batchEnd', this.batchEnd);\n    sessionStorage.setItem('role', this.currentRole);\n    if(document.getElementById(\"activeState\"))\n    this.userService.update().subscribe();\n    window.location.reload(true);\n  }\n\n  /**\n   * Enables limited ability to modify the User's role in the system\n   */\n\n  switchRole() {\n    if (sessionStorage.getItem('role') === 'DRIVER') {\n      sessionStorage.setItem('role', 'RIDER');\n      this.getRole();\n    } else if (sessionStorage.getItem('role') === 'RIDER') {\n      sessionStorage.setItem('role', 'DRIVER');\n      this.getRole();\n    } else {\n      console.log('nope');\n    }\n  }\n\n  /**\n   * Gets the list of offices from the database\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n    });\n  }\n  /** The current role of the logged on user in string form */\n  currentRole: string;\n  /**\n   * Sets up the User's current role in the system\n   */\n  getRole() {\n    this.currentRole = sessionStorage.getItem('role');\n  }\n\n  /** Holds the list of all users in the system */\n  users: any[];\n  /** Sets up all users in the system */\n  getUsers() {\n    let data;\n    this.userService.getAllUsers().subscribe((x) => { data = x; this.users = data });\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n      \n        \n          \n            \n              \n              Your Profile:\n              \n              \n                \n                  First Name\n                \n                \n              \n              \n                \n                  First name cannot be empty\n                \n                \n                  ;\n                  First name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Last Name\n                \n                \n              \n              \n                \n                  Last name cannot be empty\n                \n                \n                  ;\n                  Last name cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Email\n                \n                \n              \n              \n                \n                  Email cannot be empty\n                \n                \n                  Email cannot be more than 15 characters\n                \n              \n\n              \n                \n                  Password\n                \n                \n              \n              \n                \n                  Password cannot be empty\n                \n                \n                  Password cannot be more than 15 characters\n                \n              \n              \n                \n                  Confirm\n                \n                \n              \n              \n                \n                  Passwords do not match.\n                \n              \n\n\n              \n                \n                  Office Address\n                \n                \n                \n                \n                  \n                    {{office.name}}\n                  \n                \n              \n\n\n              \n                \n                  Address\n                \n                \n              \n              \n                \n                  Address cannot be empty\n                \n              \n\n              \n                \n                  Batch End\n                \n                \n              \n              \n                \n                  Day Start\n                \n                \n              \n              \n                Switch to Rider \n              \n              \n                Switch to Driver \n              \n              \n              \n                \" data-offstyle=\"danger\" data-height=\"100%\" data-off=\"Inactive \" checked>\n              \n              \n              \n                Edit \n              \n              Save Changes \n              \n                \n                  Please fill out ALL fields and confirm your passwords match\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Biography:\n              \n              \n                \n                  About You\n                \n              \n              \n              \n\n              \n                Profile Picture\n                \n              \n              \n                \n                  Contact Info\n                \n                \n                 -->\n                \n                  \n                    \n                  \n                \n              \n\n              \n                \n                  \n                    \n                      {{contact}}\n                    \n                  \n                  \n                  -\n                \n              \n              \n                Previous\n                 Next\n              \n            \n          \n        \n      \n      \n        \n          \n            \n              \n              Car Information:\n              \n              \n                \n                  Driver\n                  Rider\n                \n              \n              \n              \n                \n                  \n                    Make\n                  \n                  \n                \n\n                \n                  \n                    Model\n                  \n                  \n                \n\n                \n                  \n                    Year\n                  \n                  \n                \n              \n              \n                Previous\n                 Edit\n              \n              \n                \n                  Please select Driver or Rider\n                \n              \n            \n          \n        \n      \n      \n        \n          \n            \n            \n            View Users\n            \n              \n                \n                  User ID\n                  User's Name\n                  User Email\n                  User Role\n                   \n                \n              \n              \n                \n                  {{ user.id }}\n                  {{ user.firstName }}&nbsp;{{ user.lastName }}\n                  {{ user.email }}\n                  {{ user.role }}\n                  Make Admin\n                    Make Trainer\n                  \n                \n              \n            \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        Your Profile:                                                              First Name                                                                                              First name cannot be empty                                                  ;                  First name cannot be more than 15 characters                                                                              Last Name                                                                                              Last name cannot be empty                                                  ;                  Last name cannot be more than 15 characters                                                                              Email                                                                                              Email cannot be empty                                                  Email cannot be more than 15 characters                                                                              Password                                                                                              Password cannot be empty                                                  Password cannot be more than 15 characters                                                                              Confirm                                                                                              Passwords do not match.                                                                              Office Address                                                                                                      {{office.name}}                                                                                                Address                                                                                              Address cannot be empty                                                                              Batch End                                                                                              Day Start                                                                            Switch to Rider                                             Switch to Driver                                                           \" data-offstyle=\"danger\" data-height=\"100%\" data-off=\"Inactive \" checked>                                                          Edit                             Save Changes                                                 Please fill out ALL fields and confirm your passwords match                                                                                                                                  Biography:                                                              About You                                                                                        Profile Picture                                                                              Contact Info                                                 -->                                                                                                                                                                                                {{contact}}                                                                          -                                                            Previous                 Next                                                                                                                  Car Information:                                                              Driver                  Rider                                                                                                                Make                                                                                                          Model                                                                                                          Year                                                                                                Previous                 Edit                                                              Please select Driver or Rider                                                                                                                              View Users                                                            User ID                  User\\'s Name                  User Email                  User Role                                                                                                 {{ user.id }}                  {{ user.firstName }} {{ user.lastName }}                  {{ user.email }}                  {{ user.role }}                  Make Admin                    Make Trainer                                                                                                      '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'ViewProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (56/60)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                89 %\n                (43/48)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/filter.ts\n            \n            \n                class\n            \n            \n                Filter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                100 %\n                (30/30)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                    \n                        \n                            Represents the ype of contact information available for a user \n\n                        \n                    \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                    \n                        \n                            Holds the Interest type \n\n                        \n                    \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                    \n                        \n                            Represents the type of user in the system \n\n                        \n                    \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                    \n                        \n                            Represents a State in the United States (Plus DC and Puerto Rico) \n\n                        \n                    \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        12 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                    \n                        \n                            Enables the use of Strings as URL mappings to an actual resource in the backend \n\n                        \n                    \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        used to determine what files are used for testing (in our case, the *.spec.ts files) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Karma uses this variable to hold the testing context \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** whater instance is in production mode (true in this case) */\n  production: true,\n  /** URL for the service we are relying on */\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n                \n                    \n                        Represents an instance's environemnt in the event we are in production mode \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** Are we in production */\n  production: false,\n  /** URL for the service we are relying on */\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  // apiUrl: 'http://10.0.0.14:2222'\n  //apiUrl: 'http://e5a3040f.ngrok.io/'\n}\n                        \n                    \n\n                \n                    \n                        Signals what tpye of environment we are running in \n\n                    \n                \n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n                \n                    \n                        Used to access the Authentication token in our session storage \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
